--- a/net/minecraft/client/gui/GuiIngame.java
+++ b/net/minecraft/client/gui/GuiIngame.java
@@ -116,7 +116,10 @@
 
         if (Minecraft.isFancyGraphicsEnabled())
         {
+            /** MINECRIFT **/
+            if (!this.mc.stereoProvider.isStereo())
             this.func_180480_a(this.mc.thePlayer.getBrightness(p_175180_1_), var2);
+			/** END MINECRIFT **/	   
         }
         else
         {
@@ -127,7 +130,10 @@
 
         if (this.mc.gameSettings.thirdPersonView == 0 && var5 != null && var5.getItem() == Item.getItemFromBlock(Blocks.pumpkin))
         {
+            /** MINECRIFT **/
+            if (!this.mc.stereoProvider.isStereo())
             this.func_180476_e(var2);
+            /** END MINECRIFT **/
         }
 
         if (!this.mc.thePlayer.isPotionActive(Potion.confusion))
@@ -153,11 +159,13 @@
         this.mc.getTextureManager().bindTexture(icons);
         GlStateManager.enableBlend();
 
-        if (this.func_175183_b())
+        if (this.func_175183_b())  // TODO: Apply same crosshair draw check to Minecrift cursor?
         {
-            GlStateManager.tryBlendFuncSeparate(775, 769, 1, 0);
-            GlStateManager.enableAlpha();
-            this.drawTexturedModalRect(var3 / 2 - 7, var4 / 2 - 7, 0, 0, 16, 16);
+            /** MINECRIFT **/ // Don't render the normal crosshair
+            //GlStateManager.tryBlendFuncSeparate(775, 769, 1, 0);
+            //GlStateManager.enableAlpha();
+            //this.drawTexturedModalRect(var3 / 2 - 7, var4 / 2 - 7, 0, 0, 16, 16);
+            /** END MINECRIFT **/
         }
 
         GlStateManager.tryBlendFuncSeparate(770, 771, 1, 0);
@@ -1191,4 +1199,23 @@
     {
         return this.overlayPlayerList;
     }
+    
+    /** MINECRIFT ADDITIONS BELOW **/
+	
+    /**
+     * Draws a centred textured rectangle at the stored z-value. Args: x, y, width, height, u, v, texwidth, texheight
+     */
+    public void drawCentredTexturedModalRect(int centreX, int centreY, float width, float height, int u, int v, int texWidth, int texHeight)
+    {
+        float f = 0.00390625F;
+        float f1 = 0.00390625F;
+        Tessellator tessellator = Tessellator.getInstance();
+        WorldRenderer wr = tessellator.getWorldRenderer();
+        wr.startDrawingQuads();
+        wr.addVertexWithUV((double)(centreX - (width / 2f)), (double)(centreY + (height / 2f)), (double)this.zLevel, (double)((float)(u + 0) * f), (double)((float)(v + texHeight) * f1));
+        wr.addVertexWithUV((double)(centreX + (width / 2f)), (double)(centreY + (height / 2f)), (double)this.zLevel, (double)((float)(u + texWidth) * f), (double)((float)(v + texHeight) * f1));
+        wr.addVertexWithUV((double)(centreX + (width / 2f)), (double)(centreY - (height / 2f)), (double)this.zLevel, (double)((float)(u + texWidth) * f), (double)((float)(v + 0) * f1));
+        wr.addVertexWithUV((double)(centreX - (width / 2f)), (double)(centreY - (height / 2f)), (double)this.zLevel, (double)((float)(u + 0) * f), (double)((float)(v + 0) * f1));
+        tessellator.draw();
+    }
 }
