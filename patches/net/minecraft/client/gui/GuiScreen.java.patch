--- a/net/minecraft/client/gui/GuiScreen.java
+++ b/net/minecraft/client/gui/GuiScreen.java
@@ -13,7 +13,9 @@
 import net.minecraft.client.renderer.RenderHelper;
 import net.minecraft.client.renderer.Tessellator;
 import net.minecraft.client.renderer.entity.RenderItem;
+import net.minecraft.item.Item;
 import net.minecraft.item.ItemStack;
+import net.minecraft.src.Reflector;
 import net.minecraft.util.EnumChatFormatting;
 import org.lwjgl.input.Keyboard;
 import org.lwjgl.input.Mouse;
@@ -37,7 +39,9 @@
     public int height;
 
     /** A list of all the buttons in this container. */
-    protected List buttonList = new ArrayList();
+	/** MINECRIFT */
+    public List<GuiButton> buttonList = new ArrayList<GuiButton>();
+	/** END MINECRIFT */
 
     /** A list of all the labels in this container. */
     protected List labelList = new ArrayList();
@@ -53,6 +57,11 @@
     private int field_146298_h;
     private static final String __OBFID = "CL_00000710";
 
+	/** MINECRIFT */
+	public static int mouseOffsetX = 0;
+	public static int mouseOffsetY = 0;
+	/** END MINECRIFT */
+
     /**
      * Draws the screen and all the components in it.
      */
@@ -137,7 +146,16 @@
             }
         }
 
-        this.func_146283_a(var4, p_146285_2_, p_146285_3_);
+        if (Reflector.MinecraftItem_Forge_getFontRenderer.exists())
+		{
+            Item item = p_146285_1_.getItem();
+            FontRenderer font = (FontRenderer)Reflector.call(item, Reflector.MinecraftItem_Forge_getFontRenderer, new Object[] {p_146285_1_});
+            drawHoveringText(var4, p_146285_2_, p_146285_3_, (font == null ? fontRendererObj : font));
+		}
+		else
+		{
+		this.func_146283_a(var4, p_146285_2_, p_146285_3_);
+		}
     }
 
     protected void func_146279_a(String p_146279_1_, int p_146279_2_, int p_146279_3_)
@@ -147,6 +165,11 @@
 
     protected void func_146283_a(List p_146283_1_, int p_146283_2_, int p_146283_3_)
     {
+        drawHoveringText(p_146283_1_, p_146283_2_, p_146283_3_, fontRendererObj);   
+    }
+
+    protected void drawHoveringText(List p_146283_1_, int p_146283_2_, int p_146283_3_, FontRenderer font)
+    {
         if (!p_146283_1_.isEmpty())
         {
             GL11.glDisable(GL12.GL_RESCALE_NORMAL);
@@ -236,9 +259,23 @@
 
                 if (var5.mousePressed(this.mc, p_73864_1_, p_73864_2_))
                 {
-                    this.selectedButton = var5;
-                    var5.func_146113_a(this.mc.getSoundHandler());
-                    this.actionPerformed(var5);
+					if (Reflector.forgeExists())
+					{
+                        Object event = Reflector.newInstance(Reflector.ForgeActionPerformedEvent_Pre_Constructor, new Object[] {this, var5, this.buttonList});
+	                    if (Reflector.postForgeBusEvent(event))
+	                        break;
+	                    this.selectedButton = (GuiButton)Reflector.getFieldValue(event, Reflector.ForgeActionPerformedEvent_Pre_button);
+                        this.selectedButton.func_146113_a(this.mc.getSoundHandler());
+	                    this.actionPerformed(this.selectedButton);
+	                    if (this.equals(this.mc.currentScreen))
+                            Reflector.postForgeBusEvent(Reflector.ForgeActionPerformedEvent_Post_Constructor, new Object[] {this, this.selectedButton, this.buttonList});
+					}
+					else
+					{
+	                    this.selectedButton = var5;
+	                    var5.func_146113_a(this.mc.getSoundHandler());
+	                    this.actionPerformed(var5);
+					}
                 }
             }
         }
@@ -267,8 +304,20 @@
         this.fontRendererObj = p_146280_1_.fontRenderer;
         this.width = p_146280_2_;
         this.height = p_146280_3_;
-        this.buttonList.clear();
-        this.initGui();
+		if (Reflector.forgeExists())
+		{
+            if (!Reflector.postForgeBusEvent(Reflector.ForgeInitGuiEvent_Pre_Constructor, new Object[] {this, this.buttonList}));
+            {
+                this.buttonList.clear();
+                this.initGui();
+            }
+            Reflector.postForgeBusEvent(Reflector.ForgeInitGuiEvent_Post_Constructor, new Object[] {this, this.buttonList});
+		}
+		else
+		{
+            this.buttonList.clear();
+            this.initGui();
+		}
     }
 
     /**
@@ -303,9 +352,16 @@
      */
     public void handleMouseInput()
     {
-        int var1 = Mouse.getEventX() * this.width / this.mc.displayWidth;
-        int var2 = this.height - Mouse.getEventY() * this.height / this.mc.displayHeight - 1;
+		/** MINECRIFT */
+
+        // Reset mouse offset
+        mouseOffsetX = -1;
+        mouseOffsetY = -1;
+
+        int var1 = getMouseX();
+        int var2 = getMouseY();
         int var3 = Mouse.getEventButton();
+		/** END MINECRIFT */
 
         if (Mouse.getEventButtonState())
         {
@@ -367,8 +423,17 @@
     {
         if (this.mc.theWorld != null)
         {
+        /** MINECRIFT */
+        if (this.mc.vrSettings != null && this.mc.vrSettings.menuBackground == false)
+        {
+            this.drawGradientRect(0, 0, this.width, this.height, 0, 0);
+        }
+        else
+        {
             this.drawGradientRect(0, 0, this.width, this.height, -1072689136, -804253680);
         }
+		/** END MINECRIFT */
+        }
         else
         {
             this.func_146278_c(p_146270_1_);
@@ -417,4 +482,74 @@
     {
         return Keyboard.isKeyDown(42) || Keyboard.isKeyDown(54);
     }
+	
+    /** MINECRIFT ADDITIONS BELOW */
+	
+    public void mouseDown( int rawX, int rawY, int button )
+    {
+        int var1 = rawX * this.width / this.mc.displayFBWidth;
+        int var2 = this.height - rawY * this.height / this.mc.displayFBHeight - 1;
+        this.eventButton = button;
+        this.lastMouseEvent = Minecraft.getSystemTime();
+        mouseClicked(var1, var2, button);
+    }
+    
+    public void mouseUp( int rawX, int rawY, int button )
+    {
+        int var1 = rawX * this.width / this.mc.displayFBWidth;
+        int var2 = this.height - rawY * this.height / this.mc.displayFBHeight - 1;
+        mouseMovedOrUp(var1, var2, button);
+    }
+    
+    public void mouseDrag( int rawX, int rawY )
+    {
+        int var1 = rawX * this.width / this.mc.displayFBWidth;
+        int var2 = this.height - rawY * this.height / this.mc.displayFBHeight - 1;
+        long var3 = Minecraft.getSystemTime() - this.lastMouseEvent;
+        this.mouseClickMove(var1, var2, this.eventButton, var3);
+    }
+
+    public void mouseGuiDown( int guiX, int guiY, int button )
+    {
+        this.eventButton = button;
+        this.lastMouseEvent = Minecraft.getSystemTime();
+        mouseClicked(guiX, guiY, button);
+    }
+    
+    public void mouseGuiUp( int guiX, int guiY, int button )
+    {
+        mouseMovedOrUp(guiX, guiY, button);
+    }
+    
+    public void mouseGuiDrag( int guiX, int guiY )
+    {
+        long var3 = Minecraft.getSystemTime() - this.lastMouseEvent;
+        this.mouseClickMove(guiX, guiY, this.eventButton, var3);
+    }
+
+    public int getMouseX()
+    {
+        int mX = Mouse.getX() * this.mc.currentScreen.width / this.mc.displayFBWidth;
+        mX += (this.mouseOffsetX == -1 ? 0 : this.mouseOffsetX);
+        return mX;
+    }
+
+    public int getMouseY()
+    {
+        int mY = this.mc.currentScreen.height - Mouse.getY() * this.mc.currentScreen.height / this.mc.displayFBHeight - 1;
+        mY += (this.mouseOffsetY == -1 ? 0 : this.mouseOffsetY);
+        return mY;
+    }
+
+    public int getActualMouseX()
+    {
+        int mX = Mouse.getX() * this.mc.currentScreen.width / this.mc.displayFBWidth;
+        return mX;
+    }
+
+    public int getActualMouseY()
+    {
+        int mY = this.mc.currentScreen.height - Mouse.getY() * this.mc.currentScreen.height / this.mc.displayFBHeight - 1;
+        return mY;
+    }
 }
