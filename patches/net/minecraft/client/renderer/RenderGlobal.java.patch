--- a/net/minecraft/client/renderer/RenderGlobal.java
+++ b/net/minecraft/client/renderer/RenderGlobal.java
@@ -10,6 +10,8 @@
 import java.util.Map;
 import java.util.Random;
 import java.util.concurrent.Callable;
+
+import com.mtbs3d.minecrift.settings.VRSettings;
 import net.minecraft.block.Block;
 import net.minecraft.block.BlockChest;
 import net.minecraft.block.material.Material;
@@ -48,6 +50,7 @@
 import net.minecraft.client.particle.EntitySuspendFX;
 import net.minecraft.client.renderer.culling.ICamera;
 import net.minecraft.client.renderer.entity.RenderManager;
+import net.minecraft.client.renderer.entity.RenderPlayer;
 import net.minecraft.client.renderer.texture.IIconRegister;
 import net.minecraft.client.renderer.texture.TextureManager;
 import net.minecraft.client.renderer.texture.TextureMap;
@@ -647,6 +650,9 @@
             boolean var26 = this.mc.gameSettings.fancyGraphics;
             this.mc.gameSettings.fancyGraphics = Config.isDroppedItemsFancy();
 
+            /** MINECRIFT */ // logic to determine whether to render head, headwear etc...
+            Entity thePlayer = null;
+            RenderPlayer renderPlayer = (RenderPlayer)RenderManager.instance.getEntityRenderObject(this.mc.thePlayer);
             for (var25 = 0; var25 < var24.size(); ++var25)
             {
                 var19 = (Entity)var24.get(var25);
@@ -728,6 +734,23 @@
                 }
             }
 
+            /** MINECRIFT */ // Render crosshair...
+            this.mc.entityRenderer.disableLightmap((double)p_147589_3_);
+            this.mc.entityRenderer.renderCrosshairAtDepth();
+            this.mc.entityRenderer.enableLightmap((double)p_147589_3_);
+
+            // ...and now render the player...
+            if (thePlayer != null)
+            {
+                ++this.countEntitiesRendered;
+                renderPlayer.setVR(true,this.mc.vrSettings.renderHeadWear, this.mc.vrSettings.renderPlayerOffset);
+                this.renderedEntity = thePlayer;
+                RenderManager.instance.renderEntitySimple(thePlayer, p_147589_3_);
+                this.renderedEntity = null;
+                renderPlayer.setVR(false,true,0.0F);
+            }
+			/** END MINECRIFT */
+
             this.mc.entityRenderer.disableLightmap((double)p_147589_3_);
             this.theWorld.theProfiler.endSection();
         }
@@ -1769,7 +1792,7 @@
                     float partialTicks1 = par1;
                     par1 = 0.0F;
                     GL11.glDisable(GL11.GL_CULL_FACE);
-                    float var21 = (float)(this.mc.renderViewEntity.lastTickPosY + (this.mc.renderViewEntity.posY - this.mc.renderViewEntity.lastTickPosY) * (double)par1);
+                    float var2 = (float)(this.mc.renderViewEntity.lastTickPosY + (this.mc.renderViewEntity.posY - this.mc.renderViewEntity.lastTickPosY) * (double)par1);
                     byte var3 = 32;
                     int var4 = 256 / var3;
                     Tessellator var5 = Tessellator.instance;
@@ -1806,10 +1829,10 @@
                         int var18 = MathHelper.floor_double(cdx / 2048.0D);
                         dc -= (double)(cdz * 2048);
                         cdx -= (double)(var18 * 2048);
-                        float var19 = this.theWorld.provider.getCloudHeight() - var21 + 0.33F;
+                        float var19 = this.theWorld.provider.getCloudHeight() - var2 + 0.33F;
                         var19 += this.mc.gameSettings.ofCloudsHeight * 128.0F;
                         float var20 = (float)(dc * (double)var10);
-                        float var21a = (float)(cdx * (double)var10);
+                        float var21 = (float)(cdx * (double)var10);
                         var5.startDrawingQuads();
                         var5.setColorRGBA_F(exactPlayerX, var8, exactPlayerY, 0.8F);
 
@@ -1817,10 +1840,10 @@
                         {
                             for (int var23 = -var3 * var4; var23 < var3 * var4; var23 += var3)
                             {
-                                var5.addVertexWithUV((double)(var22 + 0), (double)var19, (double)(var23 + var3), (double)((float)(var22 + 0) * var10 + var20), (double)((float)(var23 + var3) * var10 + var21a));
-                                var5.addVertexWithUV((double)(var22 + var3), (double)var19, (double)(var23 + var3), (double)((float)(var22 + var3) * var10 + var20), (double)((float)(var23 + var3) * var10 + var21a));
-                                var5.addVertexWithUV((double)(var22 + var3), (double)var19, (double)(var23 + 0), (double)((float)(var22 + var3) * var10 + var20), (double)((float)(var23 + 0) * var10 + var21a));
-                                var5.addVertexWithUV((double)(var22 + 0), (double)var19, (double)(var23 + 0), (double)((float)(var22 + 0) * var10 + var20), (double)((float)(var23 + 0) * var10 + var21a));
+                                var5.addVertexWithUV((double)(var22 + 0), (double)var19, (double)(var23 + var3), (double)((float)(var22 + 0) * var10 + var20), (double)((float)(var23 + var3) * var10 + var21));
+                                var5.addVertexWithUV((double)(var22 + var3), (double)var19, (double)(var23 + var3), (double)((float)(var22 + var3) * var10 + var20), (double)((float)(var23 + var3) * var10 + var21));
+                                var5.addVertexWithUV((double)(var22 + var3), (double)var19, (double)(var23 + 0), (double)((float)(var22 + var3) * var10 + var20), (double)((float)(var23 + 0) * var10 + var21));
+                                var5.addVertexWithUV((double)(var22 + 0), (double)var19, (double)(var23 + 0), (double)((float)(var22 + 0) * var10 + var20), (double)((float)(var23 + 0) * var10 + var21));
                             }
                         }
 
@@ -2523,25 +2546,25 @@
             double var15 = this.mc.renderViewEntity.posX - par2;
             double var17 = this.mc.renderViewEntity.posY - par4;
             double var19 = this.mc.renderViewEntity.posZ - par6;
-            Object var21 = null;
+            EntityFX var21 = null;
 
             if (par1Str.equals("hugeexplosion"))
             {
                 if (Config.isAnimatedExplosion())
                 {
-                    this.mc.effectRenderer.addEffect((EntityFX)(var21 = new EntityHugeExplodeFX(this.theWorld, par2, par4, par6, par8, par10, par12)));
+                    this.mc.effectRenderer.addEffect(var21 = new EntityHugeExplodeFX(this.theWorld, par2, par4, par6, par8, par10, par12));
                 }
             }
             else if (par1Str.equals("largeexplode"))
             {
                 if (Config.isAnimatedExplosion())
                 {
-                    this.mc.effectRenderer.addEffect((EntityFX)(var21 = new EntityLargeExplodeFX(this.renderEngine, this.theWorld, par2, par4, par6, par8, par10, par12)));
+                    this.mc.effectRenderer.addEffect(var21 = new EntityLargeExplodeFX(this.renderEngine, this.theWorld, par2, par4, par6, par8, par10, par12));
                 }
             }
             else if (par1Str.equals("fireworksSpark"))
             {
-                this.mc.effectRenderer.addEffect((EntityFX)(var21 = new EntityFireworkSparkFX(this.theWorld, par2, par4, par6, par8, par10, par12, this.mc.effectRenderer)));
+                this.mc.effectRenderer.addEffect(var21 = new EntityFireworkSparkFX(this.theWorld, par2, par4, par6, par8, par10, par12, this.mc.effectRenderer));
             }
 
             if (var21 != null)
