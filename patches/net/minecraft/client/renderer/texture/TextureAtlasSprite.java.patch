--- a/net/minecraft/client/renderer/texture/TextureAtlasSprite.java
+++ b/net/minecraft/client/renderer/texture/TextureAtlasSprite.java
@@ -11,8 +11,11 @@
 import net.minecraft.client.resources.data.AnimationMetadataSection;
 import net.minecraft.crash.CrashReport;
 import net.minecraft.crash.CrashReportCategory;
+import net.minecraft.src.Config;
+import net.minecraft.src.TextureUtils;
 import net.minecraft.util.ReportedException;
 import net.minecraft.util.ResourceLocation;
+import org.lwjgl.opengl.GL11;
 
 public class TextureAtlasSprite
 {
@@ -35,11 +38,26 @@
     private static String field_176606_q = "builtin/compass";
     private static final String __OBFID = "CL_00001062";
     private int indexInMap = -1;
-    private static final String __OBFID = "CL_00001062";
+    public float baseU;
+    public float baseV;
+    public int sheetWidth;
+    public int sheetHeight;
+    public int glSpriteTextureId = -1;
+    public TextureAtlasSprite spriteSingle = null;
+
+    private TextureAtlasSprite(TextureAtlasSprite parent)
+    {
+        this.iconName = parent.iconName;
+    }
 
     protected TextureAtlasSprite(String p_i1282_1_)
     {
         this.iconName = p_i1282_1_;
+
+        if (Config.isMultiTexture())
+        {
+            this.spriteSingle = new TextureAtlasSprite(this);
+        }
     }
 
     protected static TextureAtlasSprite func_176604_a(ResourceLocation p_176604_0_)
@@ -69,6 +87,13 @@
         this.maxU = (float)(p_110971_3_ + this.width) / (float)((double)p_110971_1_) - var6;
         this.minV = (float)p_110971_4_ / (float)p_110971_2_ + var7;
         this.maxV = (float)(p_110971_4_ + this.height) / (float)p_110971_2_ - var7;
+        this.baseU = Math.min(this.minU, this.maxU);
+        this.baseV = Math.min(this.minV, this.maxV);
+
+        if (this.spriteSingle != null)
+        {
+            this.spriteSingle.initSprite(this.width, this.height, 0, 0, false);
+        }
     }
 
     public void copyFrom(TextureAtlasSprite p_94217_1_)
@@ -82,6 +107,11 @@
         this.maxU = p_94217_1_.maxU;
         this.minV = p_94217_1_.minV;
         this.maxV = p_94217_1_.maxV;
+
+        if (this.spriteSingle != null)
+        {
+            this.spriteSingle.initSprite(this.width, this.height, 0, 0, false);
+        }
     }
 
     /**
@@ -182,10 +212,12 @@
             this.frameCounter = (this.frameCounter + 1) % var2;
             this.tickCounter = 0;
             int var3 = this.animationMetadata.getFrameIndex(this.frameCounter);
+            boolean texBlur = false;
+            boolean texClamp = this.glSpriteTextureId >= 0;
 
             if (var1 != var3 && var3 >= 0 && var3 < this.framesTextureData.size())
             {
-                TextureUtil.uploadTextureMipmap((int[][])((int[][])this.framesTextureData.get(var3)), this.width, this.height, this.originX, this.originY, false, false);
+                TextureUtil.uploadTextureMipmap((int[][])((int[][])this.framesTextureData.get(var3)), this.width, this.height, this.originX, this.originY, texBlur, texClamp);
             }
         }
         else if (this.animationMetadata.func_177219_e())
@@ -249,11 +281,21 @@
     public void setIconWidth(int p_110966_1_)
     {
         this.width = p_110966_1_;
+
+        if (this.spriteSingle != null)
+        {
+            this.spriteSingle.setIconWidth(this.width);
+        }
     }
 
     public void setIconHeight(int p_110969_1_)
     {
         this.height = p_110969_1_;
+
+        if (this.spriteSingle != null)
+        {
+            this.spriteSingle.setIconHeight(this.height);
+        }
     }
 
     public void func_180598_a(BufferedImage[] p_180598_1_, AnimationMetadataSection p_180598_2_)
@@ -347,6 +389,11 @@
                 }
             }
         }
+
+        if (this.spriteSingle != null)
+        {
+            this.spriteSingle.func_180598_a(p_180598_1_, p_180598_2_);
+        }
     }
 
     public void generateMipmaps(int p_147963_1_)
@@ -371,7 +418,6 @@
                     var7.addCrashSectionCallable("Frame sizes", new Callable()
                     {
                         private static final String __OBFID = "CL_00001063";
-                        private static final String __OBFID = "CL_00001063";
                         public String call()
                         {
                             StringBuilder var1 = new StringBuilder();
@@ -392,10 +438,6 @@
 
                             return var1.toString();
                         }
-                        public Object call() throws Exception
-                        {
-                            return this.call();
-                        }
                     });
                     throw new ReportedException(var6);
                 }
@@ -403,6 +445,11 @@
         }
 
         this.setFramesTextureData(var2);
+
+        if (this.spriteSingle != null)
+        {
+            this.spriteSingle.generateMipmaps(p_147963_1_);
+        }
     }
 
     private void allocateFrameTextureData(int p_130099_1_)
@@ -414,6 +461,11 @@
                 this.framesTextureData.add((Object)null);
             }
         }
+
+        if (this.spriteSingle != null)
+        {
+            this.spriteSingle.allocateFrameTextureData(p_130099_1_);
+        }
     }
 
     private static int[][] getFrameTextureData(int[][] p_147962_0_, int p_147962_1_, int p_147962_2_, int p_147962_3_)
@@ -437,6 +489,11 @@
     public void clearFramesTextureData()
     {
         this.framesTextureData.clear();
+
+        if (this.spriteSingle != null)
+        {
+            this.spriteSingle.clearFramesTextureData();
+        }
     }
 
     public boolean hasAnimationMetadata()
@@ -447,6 +504,11 @@
     public void setFramesTextureData(List p_110968_1_)
     {
         this.framesTextureData = p_110968_1_;
+
+        if (this.spriteSingle != null)
+        {
+            this.spriteSingle.setFramesTextureData(p_110968_1_);
+        }
     }
 
     private void resetSprite()
@@ -455,6 +517,11 @@
         this.setFramesTextureData(Lists.newArrayList());
         this.frameCounter = 0;
         this.tickCounter = 0;
+
+        if (this.spriteSingle != null)
+        {
+            this.spriteSingle.resetSprite();
+        }
     }
 
     public String toString()
@@ -545,4 +612,43 @@
         float dV = this.maxV - this.minV;
         return (double)((atlasV - this.minV) / dV * 16.0F);
     }
+
+    public void bindSpriteTexture()
+    {
+        if (this.glSpriteTextureId < 0)
+        {
+            this.glSpriteTextureId = TextureUtil.glGenTextures();
+            TextureUtil.allocateTexture(this.glSpriteTextureId, this.width, this.height);
+            int mipmapLevels = Config.getGameSettings().mipmapLevels;
+            TextureUtil.func_180600_a(this.glSpriteTextureId, mipmapLevels, this.width, this.height);
+            TextureUtils.applyAnisotropicLevel();
+        }
+
+        TextureUtils.bindTexture(this.glSpriteTextureId);
+    }
+
+    public void deleteSpriteTexture()
+    {
+        if (this.glSpriteTextureId >= 0)
+        {
+            GL11.glDeleteTextures(this.glSpriteTextureId);
+            this.glSpriteTextureId = -1;
+        }
+    }
+
+    public float toSingleU(float u)
+    {
+        u -= this.baseU;
+        float ku = (float)this.sheetWidth / (float)this.width;
+        u *= ku;
+        return u;
+    }
+
+    public float toSingleV(float v)
+    {
+        v -= this.baseV;
+        float kv = (float)this.sheetHeight / (float)this.height;
+        v *= kv;
+        return v;
+    }
 }
