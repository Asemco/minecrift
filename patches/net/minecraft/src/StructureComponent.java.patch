--- a/net/minecraft/src/StructureComponent.java
+++ b/net/minecraft/src/StructureComponent.java
@@ -14,41 +14,12 @@
     /** The type ID of this component. */
     protected int componentType;
 
-    public StructureComponent() {}
-
     protected StructureComponent(int par1)
     {
         this.componentType = par1;
         this.coordBaseMode = -1;
     }
 
-    public NBTTagCompound func_143010_b()
-    {
-        NBTTagCompound var1 = new NBTTagCompound();
-        var1.setString("id", MapGenStructureIO.func_143036_a(this));
-        var1.setTag("BB", this.boundingBox.func_143047_a("BB"));
-        var1.setInteger("O", this.coordBaseMode);
-        var1.setInteger("GD", this.componentType);
-        this.func_143012_a(var1);
-        return var1;
-    }
-
-    protected abstract void func_143012_a(NBTTagCompound var1);
-
-    public void func_143009_a(World par1World, NBTTagCompound par2NBTTagCompound)
-    {
-        if (par2NBTTagCompound.hasKey("BB"))
-        {
-            this.boundingBox = new StructureBoundingBox(par2NBTTagCompound.getIntArray("BB"));
-        }
-
-        this.coordBaseMode = par2NBTTagCompound.getInteger("O");
-        this.componentType = par2NBTTagCompound.getInteger("GD");
-        this.func_143011_b(par2NBTTagCompound);
-    }
-
-    protected abstract void func_143011_b(NBTTagCompound var1);
-
     /**
      * Initiates construction of the Structure Component picked, at the current Location of StructGen
      */
@@ -185,13 +156,10 @@
             case 0:
             case 2:
                 return this.boundingBox.minX + par1;
-
             case 1:
                 return this.boundingBox.maxX - par2;
-
             case 3:
                 return this.boundingBox.minX + par2;
-
             default:
                 return par1;
         }
@@ -208,14 +176,11 @@
         {
             case 0:
                 return this.boundingBox.minZ + par2;
-
             case 1:
             case 3:
                 return this.boundingBox.minZ + par1;
-
             case 2:
                 return this.boundingBox.maxZ - par2;
-
             default:
                 return par2;
         }
