--- a/net/minecraft/src/SoundManager.java
+++ b/net/minecraft/src/SoundManager.java
@@ -21,7 +21,7 @@
     private static final String[] field_130084_a = new String[] {"ogg"};
 
     /** A reference to the sound system. */
-    private SoundSystem sndSystem;
+    public SoundSystem sndSystem;
 
     /** Set to true when the SoundManager has been initialised. */
     private boolean loaded;
@@ -42,7 +42,7 @@
 
     /** A reference to the game settings. */
     private final GameSettings options;
-    private final File fileAssets;
+    private final File field_130085_i;
 
     /** Identifiers of all currently playing sounds. Type: HashSet<String> */
     private final Set playingSounds = new HashSet();
@@ -56,7 +56,7 @@
     {
         this.ticksBeforeMusic = this.rand.nextInt(12000);
         this.options = par2GameSettings;
-        this.fileAssets = par3File;
+        this.field_130085_i = par3File;
         this.soundPoolSounds = new SoundPool(par1ResourceManager, "sound", true);
         this.soundPoolStreaming = new SoundPool(par1ResourceManager, "records", false);
         this.soundPoolMusic = new SoundPool(par1ResourceManager, "music", true);
@@ -73,34 +73,34 @@
             System.err.println("error linking with the LibraryJavaSound plug-in");
         }
 
-        this.loadSounds();
+        this.func_130083_h();
     }
 
-    public void onResourceManagerReload(ResourceManager par1ResourceManager)
+    public void func_110549_a(ResourceManager par1ResourceManager)
     {
         this.stopAllSounds();
-        this.cleanup();
+        this.closeMinecraft();
         this.tryToSetLibraryAndCodecs();
     }
 
-    private void loadSounds()
+    private void func_130083_h()
     {
-        if (this.fileAssets.isDirectory())
+        if (this.field_130085_i.isDirectory())
         {
-            Collection var1 = FileUtils.listFiles(this.fileAssets, field_130084_a, true);
+            Collection var1 = FileUtils.listFiles(this.field_130085_i, field_130084_a, true);
             Iterator var2 = var1.iterator();
 
             while (var2.hasNext())
             {
                 File var3 = (File)var2.next();
-                this.loadSoundFile(var3);
+                this.func_130081_a(var3);
             }
         }
     }
 
-    private void loadSoundFile(File par1File)
+    private void func_130081_a(File par1File)
     {
-        String var2 = this.fileAssets.toURI().relativize(par1File.toURI()).getPath();
+        String var2 = this.field_130085_i.toURI().relativize(par1File.toURI()).getPath();
         int var3 = var2.indexOf("/");
 
         if (var3 != -1)
@@ -176,9 +176,9 @@
     }
 
     /**
-     * Cleans up the Sound System
+     * Called when Minecraft is closing down.
      */
-    public void cleanup()
+    public void closeMinecraft()
     {
         if (this.loaded)
         {
@@ -231,7 +231,7 @@
                     if (var1 != null)
                     {
                         this.ticksBeforeMusic = this.rand.nextInt(12000) + 12000;
-                        this.sndSystem.backgroundMusic("BgMusic", var1.getSoundUrl(), var1.getSoundName(), false);
+                        this.sndSystem.backgroundMusic("BgMusic", var1.func_110457_b(), var1.func_110458_a(), false);
                         this.sndSystem.setVolume("BgMusic", this.options.musicVolume);
                         this.sndSystem.play("BgMusic");
                     }
@@ -306,7 +306,7 @@
                         this.sndSystem.stop("BgMusic");
                     }
 
-                    this.sndSystem.newStreamingSource(true, var5, var6.getSoundUrl(), var6.getSoundName(), false, par2, par3, par4, 2, 64.0F);
+                    this.sndSystem.newStreamingSource(true, var5, var6.func_110457_b(), var6.func_110458_a(), false, par2, par3, par4, 2, 64.0F);
                     this.sndSystem.setVolume(var5, 0.5F * this.options.soundVolume);
                     this.sndSystem.play(var5);
                 }
@@ -449,7 +449,7 @@
                             var8 *= par3;
                         }
 
-                        this.sndSystem.newSource(par5, var6, var7.getSoundUrl(), var7.getSoundName(), false, (float)par2Entity.posX, (float)par2Entity.posY, (float)par2Entity.posZ, 2, var8);
+                        this.sndSystem.newSource(par5, var6, var7.func_110457_b(), var7.func_110458_a(), false, (float)par2Entity.posX, (float)par2Entity.posY, (float)par2Entity.posZ, 2, var8);
                         this.sndSystem.setLooping(var6, true);
                         this.sndSystem.setPitch(var6, par4);
 
@@ -488,7 +488,7 @@
                     var9 *= par5;
                 }
 
-                this.sndSystem.newSource(par5 > 1.0F, var8, var7.getSoundUrl(), var7.getSoundName(), false, par2, par3, par4, 2, var9);
+                this.sndSystem.newSource(par5 > 1.0F, var8, var7.func_110457_b(), var7.func_110458_a(), false, par2, par3, par4, 2, var9);
 
                 if (par5 > 1.0F)
                 {
@@ -516,7 +516,7 @@
             {
                 this.latestSoundID = (this.latestSoundID + 1) % 256;
                 String var5 = "sound_" + this.latestSoundID;
-                this.sndSystem.newSource(false, var5, var4.getSoundUrl(), var4.getSoundName(), false, 0.0F, 0.0F, 0.0F, 0, 0.0F);
+                this.sndSystem.newSource(false, var5, var4.func_110457_b(), var4.func_110458_a(), false, 0.0F, 0.0F, 0.0F, 0, 0.0F);
 
                 if (par2 > 1.0F)
                 {
