--- a/net/minecraft/src/ServerConfigurationManager.java
+++ b/net/minecraft/src/ServerConfigurationManager.java
@@ -85,7 +85,7 @@
         var7.sendPacketToPlayer(new Packet16BlockItemSwitch(par2EntityPlayerMP.inventory.currentItem));
         this.func_96456_a((ServerScoreboard)var5.getScoreboard(), par2EntityPlayerMP);
         this.updateTimeAndWeatherForPlayer(par2EntityPlayerMP, var5);
-        this.sendChatMsg(ChatMessageComponent.createFromTranslationWithSubstitutions("multiplayer.player.joined", new Object[] {par2EntityPlayerMP.getTranslatedEntityName()}).setColor(EnumChatFormatting.YELLOW));
+        this.sendChatMsg(ChatMessageComponent.func_111082_b("multiplayer.player.joined", new Object[] {par2EntityPlayerMP.getTranslatedEntityName()}).func_111059_a(EnumChatFormatting.YELLOW));
         this.playerLoggedIn(par2EntityPlayerMP);
         var7.setPlayerLocation(par2EntityPlayerMP.posX, par2EntityPlayerMP.posY, par2EntityPlayerMP.posZ, par2EntityPlayerMP.rotationYaw, par2EntityPlayerMP.rotationPitch);
         this.mcServer.getNetworkThread().addPlayer(var7);
@@ -112,10 +112,10 @@
 
             if (var10 != null)
             {
-                var10.forceSpawn = true;
+                var10.field_98038_p = true;
                 var5.spawnEntityInWorld(var10);
                 par2EntityPlayerMP.mountEntity(var10);
-                var10.forceSpawn = false;
+                var10.field_98038_p = false;
             }
         }
     }
@@ -405,7 +405,7 @@
         var8.spawnEntityInWorld(var7);
         this.playerEntityList.add(var7);
         var7.addSelfToInternalCraftingInventory();
-        var7.setHealth(var7.getHealth());
+        var7.setEntityHealth(var7.func_110143_aJ());
         return var7;
     }
 
@@ -630,9 +630,9 @@
     }
 
     /**
-     * Returns true if the specified player is opped, even if they're currently offline.
+     * Returns true if the specific player is allowed to use commands.
      */
-    public boolean isPlayerOpped(String par1Str)
+    public boolean areCommandsAllowed(String par1Str)
     {
         return this.ops.contains(par1Str.trim().toLowerCase()) || this.mcServer.isSinglePlayer() && this.mcServer.worldServers[0].getWorldInfo().areCommandsAllowed() && this.mcServer.getServerOwner().equalsIgnoreCase(par1Str) || this.commandsAllowedForAll;
     }
