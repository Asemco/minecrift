--- a/net/minecraft/src/RenderSkeleton.java
+++ b/net/minecraft/src/RenderSkeleton.java
@@ -4,15 +4,15 @@
 
 public class RenderSkeleton extends RenderBiped
 {
-    private static final ResourceLocation skeletonTextures = new ResourceLocation("textures/entity/skeleton/skeleton.png");
-    private static final ResourceLocation witherSkeletonTextures = new ResourceLocation("textures/entity/skeleton/wither_skeleton.png");
+    private static final ResourceLocation field_110862_k = new ResourceLocation("textures/entity/skeleton/skeleton.png");
+    private static final ResourceLocation field_110861_l = new ResourceLocation("textures/entity/skeleton/wither_skeleton.png");
 
     public RenderSkeleton()
     {
         super(new ModelSkeleton(), 0.5F);
     }
 
-    protected void scaleSkeleton(EntitySkeleton par1EntitySkeleton, float par2)
+    protected void func_82438_a(EntitySkeleton par1EntitySkeleton, float par2)
     {
         if (par1EntitySkeleton.getSkeletonType() == 1)
         {
@@ -27,7 +27,7 @@
 
     protected ResourceLocation func_110860_a(EntitySkeleton par1EntitySkeleton)
     {
-        return par1EntitySkeleton.getSkeletonType() == 1 ? witherSkeletonTextures : skeletonTextures;
+        return par1EntitySkeleton.getSkeletonType() == 1 ? field_110861_l : field_110862_k;
     }
 
     protected ResourceLocation func_110856_a(EntityLiving par1EntityLiving)
@@ -41,13 +41,10 @@
      */
     protected void preRenderCallback(EntityLivingBase par1EntityLivingBase, float par2)
     {
-        this.scaleSkeleton((EntitySkeleton)par1EntityLivingBase, par2);
+        this.func_82438_a((EntitySkeleton)par1EntityLivingBase, par2);
     }
 
-    /**
-     * Returns the location of an entity's texture. Doesn't seem to be called unless you call Render.bindEntityTexture.
-     */
-    protected ResourceLocation getEntityTexture(Entity par1Entity)
+    protected ResourceLocation func_110775_a(Entity par1Entity)
     {
         return this.func_110860_a((EntitySkeleton)par1Entity);
     }
