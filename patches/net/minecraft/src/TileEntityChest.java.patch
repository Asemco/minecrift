--- a/net/minecraft/src/TileEntityChest.java
+++ b/net/minecraft/src/TileEntityChest.java
@@ -33,17 +33,17 @@
 
     /** Server sync counter (once per 20 ticks) */
     private int ticksSinceSync;
-    private int cachedChestType;
-    private String customName;
+    private int field_94046_i;
+    private String field_94045_s;
 
     public TileEntityChest()
     {
-        this.cachedChestType = -1;
+        this.field_94046_i = -1;
     }
 
     public TileEntityChest(int par1)
     {
-        this.cachedChestType = par1;
+        this.field_94046_i = par1;
     }
 
     /**
@@ -136,7 +136,7 @@
      */
     public String getInvName()
     {
-        return this.isInvNameLocalized() ? this.customName : "container.chest";
+        return this.isInvNameLocalized() ? this.field_94045_s : "container.chest";
     }
 
     /**
@@ -145,7 +145,7 @@
      */
     public boolean isInvNameLocalized()
     {
-        return this.customName != null && this.customName.length() > 0;
+        return this.field_94045_s != null && this.field_94045_s.length() > 0;
     }
 
     /**
@@ -153,7 +153,7 @@
      */
     public void setChestGuiName(String par1Str)
     {
-        this.customName = par1Str;
+        this.field_94045_s = par1Str;
     }
 
     /**
@@ -167,7 +167,7 @@
 
         if (par1NBTTagCompound.hasKey("CustomName"))
         {
-            this.customName = par1NBTTagCompound.getString("CustomName");
+            this.field_94045_s = par1NBTTagCompound.getString("CustomName");
         }
 
         for (int var3 = 0; var3 < var2.tagCount(); ++var3)
@@ -205,7 +205,7 @@
 
         if (this.isInvNameLocalized())
         {
-            par1NBTTagCompound.setString("CustomName", this.customName);
+            par1NBTTagCompound.setString("CustomName", this.field_94045_s);
         }
     }
 
@@ -247,30 +247,31 @@
             switch (par2)
             {
                 case 0:
+
                     if (this.adjacentChestZPosition != par1TileEntityChest)
                     {
                         this.adjacentChestChecked = false;
                     }
 
                     break;
-
                 case 1:
+
                     if (this.adjacentChestXNeg != par1TileEntityChest)
                     {
                         this.adjacentChestChecked = false;
                     }
 
                     break;
-
                 case 2:
+
                     if (this.adjacentChestZNeg != par1TileEntityChest)
                     {
                         this.adjacentChestChecked = false;
                     }
 
                     break;
-
                 case 3:
+
                     if (this.adjacentChestXPos != par1TileEntityChest)
                     {
                         this.adjacentChestChecked = false;
@@ -337,7 +338,7 @@
     private boolean func_94044_a(int par1, int par2, int par3)
     {
         Block var4 = Block.blocksList[this.worldObj.getBlockId(par1, par2, par3)];
-        return var4 != null && var4 instanceof BlockChest ? ((BlockChest)var4).chestType == this.getChestType() : false;
+        return var4 != null && var4 instanceof BlockChest ? ((BlockChest)var4).isTrapped == this.func_98041_l() : false;
     }
 
     /**
@@ -499,18 +500,18 @@
         this.checkForAdjacentChests();
     }
 
-    public int getChestType()
+    public int func_98041_l()
     {
-        if (this.cachedChestType == -1)
+        if (this.field_94046_i == -1)
         {
             if (this.worldObj == null || !(this.getBlockType() instanceof BlockChest))
             {
                 return 0;
             }
 
-            this.cachedChestType = ((BlockChest)this.getBlockType()).chestType;
+            this.field_94046_i = ((BlockChest)this.getBlockType()).isTrapped;
         }
 
-        return this.cachedChestType;
+        return this.field_94046_i;
     }
 }
