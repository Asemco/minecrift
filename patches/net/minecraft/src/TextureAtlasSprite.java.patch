--- a/net/minecraft/src/TextureAtlasSprite.java
+++ b/net/minecraft/src/TextureAtlasSprite.java
@@ -14,20 +14,20 @@
 
 public class TextureAtlasSprite implements Icon
 {
-    private final String iconName;
-    protected List framesTextureData = Lists.newArrayList();
-    private AnimationMetadataSection animationMetadata;
-    protected boolean rotated;
-    protected int originX;
-    protected int originY;
-    protected int width;
-    protected int height;
-    private float minU;
-    private float maxU;
-    private float minV;
-    private float maxV;
-    protected int frameCounter;
-    protected int tickCounter;
+    private final String field_110984_i;
+    protected List field_110976_a = Lists.newArrayList();
+    private AnimationMetadataSection field_110982_k;
+    protected boolean field_130222_e;
+    protected int field_110975_c;
+    protected int field_110974_d;
+    protected int field_130223_c;
+    protected int field_130224_d;
+    private float field_110979_l;
+    private float field_110980_m;
+    private float field_110977_n;
+    private float field_110978_o;
+    protected int field_110973_g;
+    protected int field_110983_h;
     private int indexInMap = -1;
     public float baseU;
     public float baseV;
@@ -42,69 +42,63 @@
 
     protected TextureAtlasSprite(String par1Str)
     {
-        this.iconName = par1Str;
+        this.field_110984_i = par1Str;
     }
 
-    public void initSprite(int par1, int par2, int par3, int par4, boolean par5)
+    public void func_110971_a(int par1, int par2, int par3, int par4, boolean par5)
     {
-        this.originX = par3;
-        this.originY = par4;
-        this.rotated = par5;
+        this.field_110975_c = par3;
+        this.field_110974_d = par4;
+        this.field_130222_e = par5;
         float var6 = (float)(0.009999999776482582D / (double)par1);
         float var7 = (float)(0.009999999776482582D / (double)par2);
-        this.minU = (float)par3 / (float)((double)par1) + var6;
-        this.maxU = (float)(par3 + this.width) / (float)((double)par1) - var6;
-        this.minV = (float)par4 / (float)par2 + var7;
-        this.maxV = (float)(par4 + this.height) / (float)par2 - var7;
-        this.baseU = Math.min(this.minU, this.maxU);
-        this.baseV = Math.min(this.minV, this.maxV);
+        this.field_110979_l = (float)par3 / (float)((double)par1) + var6;
+        this.field_110980_m = (float)(par3 + this.field_130223_c) / (float)((double)par1) - var6;
+        this.field_110977_n = (float)par4 / (float)par2 + var7;
+        this.field_110978_o = (float)(par4 + this.field_130224_d) / (float)par2 - var7;
+        this.baseU = Math.min(this.field_110979_l, this.field_110980_m);
+        this.baseV = Math.min(this.field_110977_n, this.field_110978_o);
     }
 
     public void copyFrom(TextureAtlasSprite par1TextureAtlasSprite)
     {
-        this.originX = par1TextureAtlasSprite.originX;
-        this.originY = par1TextureAtlasSprite.originY;
-        this.width = par1TextureAtlasSprite.width;
-        this.height = par1TextureAtlasSprite.height;
-        this.rotated = par1TextureAtlasSprite.rotated;
-        this.minU = par1TextureAtlasSprite.minU;
-        this.maxU = par1TextureAtlasSprite.maxU;
-        this.minV = par1TextureAtlasSprite.minV;
-        this.maxV = par1TextureAtlasSprite.maxV;
-        this.baseU = Math.min(this.minU, this.maxU);
-        this.baseV = Math.min(this.minV, this.maxV);
+        this.field_110975_c = par1TextureAtlasSprite.field_110975_c;
+        this.field_110974_d = par1TextureAtlasSprite.field_110974_d;
+        this.field_130223_c = par1TextureAtlasSprite.field_130223_c;
+        this.field_130224_d = par1TextureAtlasSprite.field_130224_d;
+        this.field_130222_e = par1TextureAtlasSprite.field_130222_e;
+        this.field_110979_l = par1TextureAtlasSprite.field_110979_l;
+        this.field_110980_m = par1TextureAtlasSprite.field_110980_m;
+        this.field_110977_n = par1TextureAtlasSprite.field_110977_n;
+        this.field_110978_o = par1TextureAtlasSprite.field_110978_o;
+        this.baseU = Math.min(this.field_110979_l, this.field_110980_m);
+        this.baseV = Math.min(this.field_110977_n, this.field_110978_o);
     }
 
-    /**
-     * Returns the X position of this icon on its texture sheet, in pixels.
-     */
-    public int getOriginX()
+    public int func_130010_a()
     {
-        return this.originX;
+        return this.field_110975_c;
     }
 
-    /**
-     * Returns the Y position of this icon on its texture sheet, in pixels.
-     */
-    public int getOriginY()
+    public int func_110967_i()
     {
-        return this.originY;
+        return this.field_110974_d;
     }
 
     /**
-     * Returns the width of the icon, in pixels.
+     * Returns the X position of this icon on its texture sheet, in pixels.
      */
-    public int getIconWidth()
+    public int getOriginX()
     {
-        return this.width;
+        return this.field_130223_c;
     }
 
     /**
-     * Returns the height of the icon, in pixels.
+     * Returns the Y position of this icon on its texture sheet, in pixels.
      */
-    public int getIconHeight()
+    public int getOriginY()
     {
-        return this.height;
+        return this.field_130224_d;
     }
 
     /**
@@ -112,7 +106,7 @@
      */
     public float getMinU()
     {
-        return this.minU;
+        return this.field_110979_l;
     }
 
     /**
@@ -120,7 +114,7 @@
      */
     public float getMaxU()
     {
-        return this.maxU;
+        return this.field_110980_m;
     }
 
     /**
@@ -128,8 +122,8 @@
      */
     public float getInterpolatedU(double par1)
     {
-        float var3 = this.maxU - this.minU;
-        return this.minU + var3 * (float)par1 / 16.0F;
+        float var3 = this.field_110980_m - this.field_110979_l;
+        return this.field_110979_l + var3 * (float)par1 / 16.0F;
     }
 
     /**
@@ -137,7 +131,7 @@
      */
     public float getMinV()
     {
-        return this.minV;
+        return this.field_110977_n;
     }
 
     /**
@@ -145,7 +139,7 @@
      */
     public float getMaxV()
     {
-        return this.maxV;
+        return this.field_110978_o;
     }
 
     /**
@@ -153,87 +147,87 @@
      */
     public float getInterpolatedV(double par1)
     {
-        float var3 = this.maxV - this.minV;
-        return this.minV + var3 * ((float)par1 / 16.0F);
+        float var3 = this.field_110978_o - this.field_110977_n;
+        return this.field_110977_n + var3 * ((float)par1 / 16.0F);
     }
 
     public String getIconName()
     {
-        return this.iconName;
+        return this.field_110984_i;
     }
 
     public void updateAnimation()
     {
-        ++this.tickCounter;
+        ++this.field_110983_h;
 
-        if (this.tickCounter >= this.animationMetadata.getFrameTimeSingle(this.frameCounter))
+        if (this.field_110983_h >= this.field_110982_k.func_110472_a(this.field_110973_g))
         {
-            int var1 = this.animationMetadata.getFrameIndex(this.frameCounter);
-            int var2 = this.animationMetadata.getFrameCount() == 0 ? this.framesTextureData.size() : this.animationMetadata.getFrameCount();
-            this.frameCounter = (this.frameCounter + 1) % var2;
-            this.tickCounter = 0;
-            int var3 = this.animationMetadata.getFrameIndex(this.frameCounter);
+            int var1 = this.field_110982_k.func_110468_c(this.field_110973_g);
+            int var2 = this.field_110982_k.func_110473_c() == 0 ? this.field_110976_a.size() : this.field_110982_k.func_110473_c();
+            this.field_110973_g = (this.field_110973_g + 1) % var2;
+            this.field_110983_h = 0;
+            int var3 = this.field_110982_k.func_110468_c(this.field_110973_g);
 
-            if (var1 != var3 && var3 >= 0 && var3 < this.framesTextureData.size())
+            if (var1 != var3 && var3 >= 0 && var3 < this.field_110976_a.size())
             {
-                this.uploadFrameTexture(var3, this.originX, this.originY);
+                this.uploadFrameTexture(var3, this.field_110975_c, this.field_110974_d);
                 this.uploadedFrameIndex = var3;
             }
         }
     }
 
-    public int[] getFrameTextureData(int par1)
+    public int[] func_110965_a(int par1)
     {
-        return (int[])((int[])this.framesTextureData.get(par1));
+        return (int[])((int[])this.field_110976_a.get(par1));
     }
 
-    public int getFrameCount()
+    public int func_110970_k()
     {
-        return this.framesTextureData.size();
+        return this.field_110976_a.size();
     }
 
-    public void setIconWidth(int par1)
+    public void func_110966_b(int par1)
     {
-        this.width = par1;
+        this.field_130223_c = par1;
     }
 
-    public void setIconHeight(int par1)
+    public void func_110969_c(int par1)
     {
-        this.height = par1;
+        this.field_130224_d = par1;
     }
 
-    public void loadSprite(Resource par1Resource) throws IOException
+    public void func_130100_a(Resource par1Resource) throws IOException
     {
-        this.resetSprite();
-        InputStream var2 = par1Resource.getInputStream();
-        AnimationMetadataSection var3 = (AnimationMetadataSection)par1Resource.getMetadata("animation");
+        this.func_130102_n();
+        InputStream var2 = par1Resource.func_110527_b();
+        AnimationMetadataSection var3 = (AnimationMetadataSection)par1Resource.func_110526_a("animation");
         BufferedImage var4 = ImageIO.read(var2);
-        this.height = var4.getHeight();
-        this.width = var4.getWidth();
-        int[] var5 = new int[this.height * this.width];
-        var4.getRGB(0, 0, this.width, this.height, var5, 0, this.width);
+        this.field_130224_d = var4.getHeight();
+        this.field_130223_c = var4.getWidth();
+        int[] var5 = new int[this.field_130224_d * this.field_130223_c];
+        var4.getRGB(0, 0, this.field_130223_c, this.field_130224_d, var5, 0, this.field_130223_c);
         int var6;
 
         if (var3 == null)
         {
-            if (this.height != this.width)
+            if (this.field_130224_d != this.field_130223_c)
             {
                 throw new RuntimeException("broken aspect ratio and not an animation");
             }
 
-            this.framesTextureData.add(var5);
+            this.field_110976_a.add(var5);
         }
         else
         {
-            var6 = this.height / this.width;
-            int var7 = this.width;
-            int var8 = this.width;
-            this.height = this.width;
+            var6 = this.field_130224_d / this.field_130223_c;
+            int var7 = this.field_130223_c;
+            int var8 = this.field_130223_c;
+            this.field_130224_d = this.field_130223_c;
             int var9;
 
-            if (var3.getFrameCount() > 0)
+            if (var3.func_110473_c() > 0)
             {
-                Iterator var10 = var3.getFrameIndexSet().iterator();
+                Iterator var10 = var3.func_130073_e().iterator();
 
                 while (var10.hasNext())
                 {
@@ -244,11 +238,11 @@
                         throw new RuntimeException("invalid frameindex " + var9);
                     }
 
-                    this.allocateFrameTextureData(var9);
-                    this.framesTextureData.set(var9, getFrameTextureData(var5, var7, var8, var9));
+                    this.func_130099_d(var9);
+                    this.field_110976_a.set(var9, func_130101_a(var5, var7, var8, var9));
                 }
 
-                this.animationMetadata = var3;
+                this.field_110982_k = var3;
             }
             else
             {
@@ -256,73 +250,73 @@
 
                 for (var9 = 0; var9 < var6; ++var9)
                 {
-                    this.framesTextureData.add(getFrameTextureData(var5, var7, var8, var9));
+                    this.field_110976_a.add(func_130101_a(var5, var7, var8, var9));
                     var11.add(new AnimationFrame(var9, -1));
                 }
 
-                this.animationMetadata = new AnimationMetadataSection(var11, this.width, this.height, var3.getFrameTime());
+                this.field_110982_k = new AnimationMetadataSection(var11, this.field_130223_c, this.field_130224_d, var3.func_110469_d());
             }
         }
 
-        for (var6 = 0; var6 < this.framesTextureData.size(); ++var6)
+        for (var6 = 0; var6 < this.field_110976_a.size(); ++var6)
         {
-            if (this.framesTextureData.get(var6) == null)
+            if (this.field_110976_a.get(var6) == null)
             {
-                this.framesTextureData.set(var6, new int[this.width * this.height]);
+                this.field_110976_a.set(var6, new int[this.field_130223_c * this.field_130224_d]);
             }
 
-            int[] var12 = (int[])((int[])this.framesTextureData.get(var6));
+            int[] var12 = (int[])((int[])this.field_110976_a.get(var6));
             this.fixTransparentColor(var12);
         }
     }
 
-    private void allocateFrameTextureData(int par1)
+    private void func_130099_d(int par1)
     {
-        if (this.framesTextureData.size() <= par1)
+        if (this.field_110976_a.size() <= par1)
         {
-            for (int var2 = this.framesTextureData.size(); var2 <= par1; ++var2)
+            for (int var2 = this.field_110976_a.size(); var2 <= par1; ++var2)
             {
-                this.framesTextureData.add((Object)null);
+                this.field_110976_a.add((Object)null);
             }
         }
     }
 
-    private static int[] getFrameTextureData(int[] par0ArrayOfInteger, int par1, int par2, int par3)
+    private static int[] func_130101_a(int[] par0ArrayOfInteger, int par1, int par2, int par3)
     {
         int[] var4 = new int[par1 * par2];
         System.arraycopy(par0ArrayOfInteger, par3 * var4.length, var4, 0, var4.length);
         return var4;
     }
 
-    public void clearFramesTextureData()
+    public void func_130103_l()
     {
-        this.framesTextureData.clear();
+        this.field_110976_a.clear();
     }
 
-    public boolean hasAnimationMetadata()
+    public boolean func_130098_m()
     {
-        return this.animationMetadata != null;
+        return this.field_110982_k != null;
     }
 
-    public void setFramesTextureData(List par1List)
+    public void func_110968_a(List par1List)
     {
-        this.framesTextureData = par1List;
+        this.field_110976_a = par1List;
 
-        for (int var2 = 0; var2 < this.framesTextureData.size(); ++var2)
+        for (int var2 = 0; var2 < this.field_110976_a.size(); ++var2)
         {
-            if (this.framesTextureData.get(var2) == null)
+            if (this.field_110976_a.get(var2) == null)
             {
-                this.framesTextureData.set(var2, new int[this.width * this.height]);
+                this.field_110976_a.set(var2, new int[this.field_130223_c * this.field_130224_d]);
             }
         }
     }
 
-    private void resetSprite()
+    private void func_130102_n()
     {
-        this.animationMetadata = null;
-        this.setFramesTextureData(Lists.newArrayList());
-        this.frameCounter = 0;
-        this.tickCounter = 0;
+        this.field_110982_k = null;
+        this.func_110968_a(Lists.newArrayList());
+        this.field_110973_g = 0;
+        this.field_110983_h = 0;
         this.deleteOwnTexture();
         this.uploadedFrameIndex = -1;
         this.uploadedOwnFrameIndex = -1;
@@ -332,17 +326,17 @@
 
     public String toString()
     {
-        return "TextureAtlasSprite{name=\'" + this.iconName + '\'' + ", frameCount=" + this.framesTextureData.size() + ", rotated=" + this.rotated + ", x=" + this.originX + ", y=" + this.originY + ", height=" + this.height + ", width=" + this.width + ", u0=" + this.minU + ", u1=" + this.maxU + ", v0=" + this.minV + ", v1=" + this.maxV + '}';
+        return "TextureAtlasSprite{name=\'" + this.field_110984_i + '\'' + ", frameCount=" + this.field_110976_a.size() + ", rotated=" + this.field_130222_e + ", x=" + this.field_110975_c + ", y=" + this.field_110974_d + ", height=" + this.field_130224_d + ", width=" + this.field_130223_c + ", u0=" + this.field_110979_l + ", u1=" + this.field_110980_m + ", v0=" + this.field_110977_n + ", v1=" + this.field_110978_o + '}';
     }
 
     public int getWidth()
     {
-        return this.width;
+        return this.field_130223_c;
     }
 
     public int getHeight()
     {
-        return this.height;
+        return this.field_130224_d;
     }
 
     public int getIndexInMap()
@@ -363,29 +357,29 @@
 
     public boolean load(ResourceManager manager, ResourceLocation location) throws IOException
     {
-        this.loadSprite(manager.getResource(location));
+        this.func_130100_a(manager.func_110536_a(location));
         return true;
     }
 
     public void uploadFrameTexture()
     {
-        this.uploadFrameTexture(this.frameCounter, this.originX, this.originY);
+        this.uploadFrameTexture(this.field_110973_g, this.field_110975_c, this.field_110974_d);
     }
 
     public void uploadFrameTexture(int frameIndex, int xPos, int yPos)
     {
-        int frameCount = this.getFrameCount();
+        int frameCount = this.func_110970_k();
 
         if (frameIndex >= 0 && frameIndex < frameCount)
         {
             if (frameCount <= 1)
             {
-                int[] buf = this.getFrameTextureData(frameIndex);
-                IntBuffer data = TextureUtils.getStaticBuffer(this.width, this.height);
+                int[] buf = this.func_110965_a(frameIndex);
+                IntBuffer data = TextureUtils.getStaticBuffer(this.field_130223_c, this.field_130224_d);
                 data.clear();
                 data.put(buf);
                 data.clear();
-                GL11.glTexSubImage2D(GL11.GL_TEXTURE_2D, 0, xPos, yPos, this.width, this.height, GL12.GL_BGRA, GL12.GL_UNSIGNED_INT_8_8_8_8_REV, data);
+                GL11.glTexSubImage2D(GL11.GL_TEXTURE_2D, 0, xPos, yPos, this.field_130223_c, this.field_130224_d, GL12.GL_BGRA, GL12.GL_UNSIGNED_INT_8_8_8_8_REV, data);
             }
             else
             {
@@ -395,7 +389,7 @@
 
                     for (int var8 = 0; var8 < this.frameBuffers.length; ++var8)
                     {
-                        int[] var10 = this.getFrameTextureData(var8);
+                        int[] var10 = this.func_110965_a(var8);
                         IntBuffer buf1 = GLAllocation.createDirectIntBuffer(var10.length);
                         buf1.put(var10);
                         buf1.clear();
@@ -405,7 +399,7 @@
 
                 IntBuffer var9 = this.frameBuffers[frameIndex];
                 var9.clear();
-                GL11.glTexSubImage2D(GL11.GL_TEXTURE_2D, 0, xPos, yPos, this.width, this.height, GL12.GL_BGRA, GL12.GL_UNSIGNED_INT_8_8_8_8_REV, var9);
+                GL11.glTexSubImage2D(GL11.GL_TEXTURE_2D, 0, xPos, yPos, this.field_130223_c, this.field_130224_d, GL12.GL_BGRA, GL12.GL_UNSIGNED_INT_8_8_8_8_REV, var9);
             }
 
             if (this.mipmapActive)
@@ -419,15 +413,15 @@
     {
         if (this.mipmapActive)
         {
-            int frameCount = this.getFrameCount();
+            int frameCount = this.func_110970_k();
 
             if (frameIndex >= 0 && frameIndex < frameCount)
             {
                 if (frameCount <= 1)
                 {
-                    int[] var8 = this.getFrameTextureData(frameIndex);
+                    int[] var8 = this.func_110965_a(frameIndex);
                     boolean var10 = false;
-                    Mipmaps var11 = new Mipmaps(this.iconName, this.width, this.height, var8, var10);
+                    Mipmaps var11 = new Mipmaps(this.field_110984_i, this.field_130223_c, this.field_130224_d, var8, var10);
                     var11.uploadMipmaps(xPos, yPos);
                 }
                 else
@@ -438,9 +432,9 @@
 
                         for (int m = 0; m < this.frameMipmaps.length; ++m)
                         {
-                            int[] data = this.getFrameTextureData(m);
+                            int[] data = this.func_110965_a(m);
                             boolean direct = frameCount > 0;
-                            this.frameMipmaps[m] = new Mipmaps(this.iconName, this.width, this.height, data, direct);
+                            this.frameMipmaps[m] = new Mipmaps(this.field_110984_i, this.field_130223_c, this.field_130224_d, data, direct);
                         }
                     }
 
@@ -455,9 +449,9 @@
     {
         if (this.glOwnTextureId < 0)
         {
-            this.glOwnTextureId = TextureUtil.glGenTextures();
-            TextureUtil.allocateTexture(this.glOwnTextureId, this.width, this.height);
-            TextureUtils.setupTexture(this.width, this.height, 1, this.mipmapActive);
+            this.glOwnTextureId = TextureUtil.func_110996_a();
+            TextureUtil.func_110991_a(this.glOwnTextureId, this.field_130223_c, this.field_130224_d);
+            TextureUtils.setupTexture(this.field_130223_c, this.field_130224_d, 1, this.mipmapActive);
         }
 
         TextureUtil.bindTexture(this.glOwnTextureId);
@@ -466,7 +460,7 @@
     public void bindUploadOwnTexture()
     {
         this.bindOwnTexture();
-        this.uploadFrameTexture(this.frameCounter, 0, 0);
+        this.uploadFrameTexture(this.field_110973_g, 0, 0);
     }
 
     public void uploadOwnAnimation()
