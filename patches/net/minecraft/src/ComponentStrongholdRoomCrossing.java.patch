--- a/net/minecraft/src/ComponentStrongholdRoomCrossing.java
+++ b/net/minecraft/src/ComponentStrongholdRoomCrossing.java
@@ -9,31 +9,18 @@
      * Items that could generate in the chest that is located in Stronghold Room Crossing.
      */
     private static final WeightedRandomChestContent[] strongholdRoomCrossingChestContents = new WeightedRandomChestContent[] {new WeightedRandomChestContent(Item.ingotIron.itemID, 0, 1, 5, 10), new WeightedRandomChestContent(Item.ingotGold.itemID, 0, 1, 3, 5), new WeightedRandomChestContent(Item.redstone.itemID, 0, 4, 9, 5), new WeightedRandomChestContent(Item.coal.itemID, 0, 3, 8, 10), new WeightedRandomChestContent(Item.bread.itemID, 0, 1, 3, 15), new WeightedRandomChestContent(Item.appleRed.itemID, 0, 1, 3, 15), new WeightedRandomChestContent(Item.pickaxeIron.itemID, 0, 1, 1, 1)};
-    protected int roomType;
-
-    public ComponentStrongholdRoomCrossing() {}
+    protected final EnumDoor doorType;
+    protected final int roomType;
 
     public ComponentStrongholdRoomCrossing(int par1, Random par2Random, StructureBoundingBox par3StructureBoundingBox, int par4)
     {
         super(par1);
         this.coordBaseMode = par4;
-        this.field_143013_d = this.getRandomDoor(par2Random);
+        this.doorType = this.getRandomDoor(par2Random);
         this.boundingBox = par3StructureBoundingBox;
         this.roomType = par2Random.nextInt(5);
     }
 
-    protected void func_143012_a(NBTTagCompound par1NBTTagCompound)
-    {
-        super.func_143012_a(par1NBTTagCompound);
-        par1NBTTagCompound.setInteger("Type", this.roomType);
-    }
-
-    protected void func_143011_b(NBTTagCompound par1NBTTagCompound)
-    {
-        super.func_143011_b(par1NBTTagCompound);
-        this.roomType = par1NBTTagCompound.getInteger("Type");
-    }
-
     /**
      * Initiates construction of the Structure Component picked, at the current Location of StructGen
      */
@@ -63,7 +50,7 @@
         else
         {
             this.fillWithRandomizedBlocks(par1World, par3StructureBoundingBox, 0, 0, 0, 10, 6, 10, true, par2Random, StructureStrongholdPieces.getStrongholdStones());
-            this.placeDoor(par1World, par2Random, par3StructureBoundingBox, this.field_143013_d, 4, 1, 0);
+            this.placeDoor(par1World, par2Random, par3StructureBoundingBox, this.doorType, 4, 1, 0);
             this.fillWithBlocks(par1World, par3StructureBoundingBox, 4, 1, 10, 6, 3, 10, 0, 0, false);
             this.fillWithBlocks(par1World, par3StructureBoundingBox, 0, 1, 4, 0, 3, 6, 0, 0, false);
             this.fillWithBlocks(par1World, par3StructureBoundingBox, 10, 1, 4, 10, 3, 6, 0, 0, false);
@@ -88,8 +75,8 @@
                     this.placeBlockAtCurrentPosition(par1World, Block.stoneSingleSlab.blockID, 0, 5, 1, 4, par3StructureBoundingBox);
                     this.placeBlockAtCurrentPosition(par1World, Block.stoneSingleSlab.blockID, 0, 5, 1, 6, par3StructureBoundingBox);
                     break;
-
                 case 1:
+
                     for (var4 = 0; var4 < 5; ++var4)
                     {
                         this.placeBlockAtCurrentPosition(par1World, Block.stoneBrick.blockID, 0, 3, 1, 3 + var4, par3StructureBoundingBox);
@@ -103,8 +90,8 @@
                     this.placeBlockAtCurrentPosition(par1World, Block.stoneBrick.blockID, 0, 5, 3, 5, par3StructureBoundingBox);
                     this.placeBlockAtCurrentPosition(par1World, Block.waterMoving.blockID, 0, 5, 4, 5, par3StructureBoundingBox);
                     break;
-
                 case 2:
+
                     for (var4 = 1; var4 <= 9; ++var4)
                     {
                         this.placeBlockAtCurrentPosition(par1World, Block.cobblestone.blockID, 0, 1, 3, var4, par3StructureBoundingBox);
