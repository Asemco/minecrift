--- a/net/minecraft/src/RenderPlayer.java
+++ b/net/minecraft/src/RenderPlayer.java
@@ -8,6 +8,9 @@
     private ModelBiped modelBipedMain;
     private ModelBiped modelArmorChestplate;
     private ModelBiped modelArmor;
+    private float vrOffset;
+    public static float NAME_TAG_RANGE = 64.0f;
+    public static float NAME_TAG_RANGE_SNEAK = 32.0f;
 
     public RenderPlayer()
     {
@@ -17,6 +20,14 @@
         this.modelArmor = new ModelBiped(0.5F);
     }
 
+	public void setVR(boolean vrMode, boolean renderHeadWear, float offset) {
+		
+		vrOffset = vrMode? offset : 0.0F;
+		this.modelBipedMain.vrOffset = this.modelArmorChestplate.vrOffset = this.modelArmor.vrOffset = vrOffset;
+        this.modelBipedMain._renderHead = this.modelArmorChestplate._renderHead = this.modelArmor._renderHead = !vrMode;
+        this.modelBipedMain._renderHeadWear = this.modelArmorChestplate._renderHeadWear = this.modelArmor._renderHeadWear = renderHeadWear;
+	}
+
     /**
      * Set the specified armor model as the player model. Args: player, armorSlot, partialTick
      */
@@ -150,9 +161,17 @@
             this.modelBipedMain.bipedHead.postRender(0.0625F);
             float var5;
 
-            if (var4.getItem().itemID < 256)
+            if (var4 != null &&  var4.getItem() instanceof ItemBlock )
             {
-                if (RenderBlocks.renderItemIn3d(Block.blocksList[var4.itemID].getRenderType()))
+            	boolean render3D = false;
+            	if( false )
+            	{
+            		//TODO: forge compatibility
+            		//IItemRenderer customRenderer = MinecraftForgeClient.getItemRenderer(itemstack, EQUIPPED);
+            		
+            	}
+            	
+                if (render3D || RenderBlocks.renderItemIn3d(Block.blocksList[var4.itemID].getRenderType()))
                 {
                     var5 = 0.625F;
                     GL11.glTranslatef(0.0F, -0.25F, 0.0F);
@@ -258,6 +277,7 @@
         if (var28 != null)
         {
             GL11.glPushMatrix();
+            GL11.glTranslatef(0, 0, vrOffset);
             this.modelBipedMain.bipedRightArm.postRender(0.0625F);
             GL11.glTranslatef(-0.0625F, 0.4375F, 0.0625F);
 
@@ -332,7 +352,12 @@
 
             if (var28.getItem().requiresMultipleRenderPasses())
             {
-                for (var33 = 0; var33 <= 1; ++var33)
+            	int renderPasses = 1;
+            	if( Reflector.ForgeItem.exists() )
+            	{
+            		renderPasses = Reflector.callInt(var28.getItem(), Reflector.ForgeItem_getRenderPasses,new Object[]{var28.getItemDamage()});
+            	}
+                for (var33 = 0; var33 <= renderPasses; ++var33)
                 {
                     int var11 = var28.getItem().getColorFromItemStack(var28, var33);
                     var32 = (float)(var11 >> 16 & 255) / 255.0F;
@@ -495,4 +520,5 @@
     {
         this.func_130009_a((AbstractClientPlayer)par1Entity, par2, par4, par6, par8, par9);
     }
+
 }
