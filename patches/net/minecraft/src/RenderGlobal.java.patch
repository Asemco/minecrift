--- a/net/minecraft/src/RenderGlobal.java
+++ b/net/minecraft/src/RenderGlobal.java
@@ -508,21 +508,31 @@
 
                 if (!var5 || Reflector.callBoolean(var9, Reflector.ForgeEntity_shouldRenderInPass, new Object[] {Integer.valueOf(var4)}))
                 {
-                    boolean var11 = var9.isInRangeToRenderVec3D(par1Vec3) && (var9.ignoreFrustumCheck || par2ICamera.isBoundingBoxInFrustum(var9.boundingBox) || var9.riddenByEntity == this.mc.thePlayer);
+                    boolean render = var9.isInRangeToRenderVec3D(par1Vec3) && (var9.ignoreFrustumCheck || par2ICamera.isBoundingBoxInFrustum(var9.boundingBox) || var9.riddenByEntity == this.mc.thePlayer);
 
-                    if (!var11 && var9 instanceof EntityLiving)
+                    if (!render && var9 instanceof EntityLiving)
                     {
                         EntityLiving var12 = (EntityLiving)var9;
 
                         if (var12.getLeashed() && var12.getLeashedToEntity() != null)
                         {
                             Entity var13 = var12.getLeashedToEntity();
-                            var11 = par2ICamera.isBoundingBoxInFrustum(var13.boundingBox);
+                            render = par2ICamera.isBoundingBoxInFrustum(var13.boundingBox);
                         }
                     }
 
-                    if (var11 && (var9 != this.mc.renderViewEntity || this.mc.gameSettings.thirdPersonView != 0 || this.mc.renderViewEntity.isPlayerSleeping()) && this.theWorld.blockExists(MathHelper.floor_double(var9.posX), 0, MathHelper.floor_double(var9.posZ)))
+					// Minecrift - logic to determine whether to render head, headwear etc...
+                	RenderPlayer renderPlayer = (RenderPlayer)RenderManager.instance.getEntityRenderObject(this.mc.thePlayer);
+
+                    if (render && (var9 == this.mc.renderViewEntity && this.mc.gameSettings.thirdPersonView == 0 && !mc.renderViewEntity.isPlayerSleeping()) && this.theWorld.blockExists(MathHelper.floor_double(var9.posX), 0, MathHelper.floor_double(var9.posZ)))
                     {
+	                	renderPlayer.setVR(true,this.mc.vrSettings.renderHeadWear, this.mc.vrSettings.renderPlayerOffset);
+	                    if (this.mc.vrSettings.renderFullFirstPersonModel == false || this.mc.vrSettings.useVRRenderer == false)
+	                        render = false;
+	                }
+
+	                if (render)
+	                {
                         ++this.countEntitiesRendered;
 
                         if (var9.getClass() == EntityItemFrame.class)
@@ -534,7 +544,12 @@
                         RenderManager.instance.renderEntity(var9, par3);
                         this.renderedEntity = null;
                     }
-                }
+
+	                if (var9 == this.mc.renderViewEntity && this.mc.gameSettings.thirdPersonView == 0 && !mc.renderViewEntity.isPlayerSleeping() )
+	                {
+	                	renderPlayer.setVR(false,true,0.0F);
+	                }
+				}
             }
 
             this.mc.gameSettings.fancyGraphics = var10;
@@ -779,10 +794,11 @@
         RenderHelper.disableStandardItemLighting();
         WrUpdates.preRender(this, par1EntityLivingBase);
 
-        if (this.mc.gameSettings.ofSmoothFps && par2 == 0)
-        {
-            GL11.glFinish();
-        }
+        // VR renderer already calls this.
+//        if (this.mc.gameSettings.ofSmoothFps && par2 == 0)
+//        {
+//            GL11.glFinish();
+//        }
 
         byte var42 = 0;
         int var44 = 0;
