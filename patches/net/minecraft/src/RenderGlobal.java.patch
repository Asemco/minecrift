--- a/net/minecraft/src/RenderGlobal.java
+++ b/net/minecraft/src/RenderGlobal.java
@@ -340,12 +340,14 @@
                 var1 = var3;
             }
 
+            // TODO: Set chunk renderer attribs for greater draw distance
             this.prevReposX = -9999.0D;
             this.prevReposY = -9999.0D;
             this.prevReposZ = -9999.0D;
             this.renderChunksWide = var1 / 16 + 1;
             this.renderChunksTall = 16;
             this.renderChunksDeep = var1 / 16 + 1;
+
             this.worldRenderers = new WorldRenderer[this.renderChunksWide * this.renderChunksTall * this.renderChunksDeep];
             this.sortedWorldRenderers = new WorldRenderer[this.renderChunksWide * this.renderChunksTall * this.renderChunksDeep];
             int var4 = 0;
@@ -472,18 +474,36 @@
             {
                 var7 = (Entity)var5.get(var6);
 
-                if (var7.isInRangeToRenderVec3D(par1Vec3) && (var7.ignoreFrustumCheck || par2ICamera.isBoundingBoxInFrustum(var7.boundingBox) || var7.riddenByEntity == this.mc.thePlayer) && (var7 != this.mc.renderViewEntity || this.mc.gameSettings.thirdPersonView != 0 || this.mc.renderViewEntity.isPlayerSleeping()) && this.theWorld.blockExists(MathHelper.floor_double(var7.posX), 0, MathHelper.floor_double(var7.posZ)))
+                if (var7.isInRangeToRenderVec3D(par1Vec3) && (var7.ignoreFrustumCheck || par2ICamera.isBoundingBoxInFrustum(var7.boundingBox) || var7.riddenByEntity == this.mc.thePlayer) && ( this.mc.vrSettings.useVRRenderer || this.mc.gameSettings.thirdPersonView > 0|| var7 != this.mc.renderViewEntity || this.mc.renderViewEntity.isPlayerSleeping()) && this.theWorld.blockExists(MathHelper.floor_double(var7.posX), 0, MathHelper.floor_double(var7.posZ)))
                 {
-                    ++this.countEntitiesRendered;
+                    boolean render = true;
+                    RenderPlayer renderPlayer = (RenderPlayer)RenderManager.instance.getEntityRenderObject(this.mc.thePlayer);
 
-                    if (var7.getClass() == EntityItemFrame.class)
+                    if (var7 == this.mc.renderViewEntity && this.mc.gameSettings.thirdPersonView == 0 && !mc.renderViewEntity.isPlayerSleeping() )
                     {
-                        var7.renderDistanceWeight = 0.06D;
+                    	renderPlayer.setVR(true,this.mc.vrSettings.renderHeadWear, this.mc.vrSettings.renderPlayerOffset);
+                        if (this.mc.vrSettings.renderFullFirstPersonModel == false)
+                            render = false;
                     }
 
-                    this.renderedEntity = var7;
-                    RenderManager.instance.renderEntity(var7, par3);
-                    this.renderedEntity = null;
+                    if (render)
+                    {
+                        ++this.countEntitiesRendered;
+
+                        if (var7.getClass() == EntityItemFrame.class)
+                        {
+                            var7.renderDistanceWeight = 0.06D;
+                        }
+
+                        this.renderedEntity = var7;
+                        RenderManager.instance.renderEntity(var7, par3);
+                        this.renderedEntity = null;
+                    }
+
+                    if (var7 == this.mc.renderViewEntity && this.mc.gameSettings.thirdPersonView == 0 && !mc.renderViewEntity.isPlayerSleeping() )
+                    {
+                    	renderPlayer.setVR(false,true,0.0F);
+                    }
                 }
             }
 
@@ -720,10 +740,11 @@
         RenderHelper.disableStandardItemLighting();
         WrUpdates.preRender(this, par1EntityLiving);
 
-        if (this.mc.gameSettings.ofSmoothFps && par2 == 0)
-        {
-            GL11.glFinish();
-        }
+        // VR renderer already calls this.
+//        if (this.mc.gameSettings.ofSmoothFps && par2 == 0)
+//        {
+//            GL11.glFinish();
+//        }
 
         byte var42 = 0;
         int var44 = 0;
