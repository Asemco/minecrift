--- a/net/minecraft/src/TextureManager.java
+++ b/net/minecraft/src/TextureManager.java
@@ -11,45 +11,45 @@
 
 public class TextureManager implements Tickable, ResourceManagerReloadListener
 {
-    private final Map mapTextureObjects = Maps.newHashMap();
-    private final Map mapResourceLocations = Maps.newHashMap();
-    private final List listTickables = Lists.newArrayList();
-    private final Map mapTextureCounters = Maps.newHashMap();
-    private ResourceManager theResourceManager;
+    private final Map field_110585_a = Maps.newHashMap();
+    private final Map field_130089_b = Maps.newHashMap();
+    private final List field_110583_b = Lists.newArrayList();
+    private final Map field_110584_c = Maps.newHashMap();
+    private ResourceManager field_110582_d;
 
     public TextureManager(ResourceManager par1ResourceManager)
     {
-        this.theResourceManager = par1ResourceManager;
+        this.field_110582_d = par1ResourceManager;
     }
 
-    public void bindTexture(ResourceLocation par1ResourceLocation)
+    public void func_110577_a(ResourceLocation par1ResourceLocation)
     {
         if (Config.isRandomMobs())
         {
             par1ResourceLocation = RandomMobs.getTextureLocation(par1ResourceLocation);
         }
 
-        Object var2 = (TextureObject)this.mapTextureObjects.get(par1ResourceLocation);
+        Object var2 = (TextureObject)this.field_110585_a.get(par1ResourceLocation);
 
         if (var2 == null)
         {
             var2 = new SimpleTexture(par1ResourceLocation);
-            this.loadTexture(par1ResourceLocation, (TextureObject)var2);
+            this.func_110579_a(par1ResourceLocation, (TextureObject)var2);
         }
 
-        TextureUtil.bindTexture(((TextureObject)var2).getGlTextureId());
+        TextureUtil.bindTexture(((TextureObject)var2).func_110552_b());
     }
 
-    public ResourceLocation getResourceLocation(int par1)
+    public ResourceLocation func_130087_a(int par1)
     {
-        return (ResourceLocation)this.mapResourceLocations.get(Integer.valueOf(par1));
+        return (ResourceLocation)this.field_130089_b.get(Integer.valueOf(par1));
     }
 
-    public boolean loadTextureMap(ResourceLocation par1ResourceLocation, TextureMap par2TextureMap)
+    public boolean func_130088_a(ResourceLocation par1ResourceLocation, TextureMap par2TextureMap)
     {
-        if (this.loadTickableTexture(par1ResourceLocation, par2TextureMap))
+        if (this.func_110580_a(par1ResourceLocation, par2TextureMap))
         {
-            this.mapResourceLocations.put(Integer.valueOf(par2TextureMap.getTextureType()), par1ResourceLocation);
+            this.field_130089_b.put(Integer.valueOf(par2TextureMap.func_130086_a()), par1ResourceLocation);
             return true;
         }
         else
@@ -58,11 +58,11 @@
         }
     }
 
-    public boolean loadTickableTexture(ResourceLocation par1ResourceLocation, TickableTextureObject par2TickableTextureObject)
+    public boolean func_110580_a(ResourceLocation par1ResourceLocation, TickableTextureObject par2TickableTextureObject)
     {
-        if (this.loadTexture(par1ResourceLocation, par2TickableTextureObject))
+        if (this.func_110579_a(par1ResourceLocation, par2TickableTextureObject))
         {
-            this.listTickables.add(par2TickableTextureObject);
+            this.field_110583_b.add(par2TickableTextureObject);
             return true;
         }
         else
@@ -71,19 +71,19 @@
         }
     }
 
-    public boolean loadTexture(ResourceLocation par1ResourceLocation, TextureObject par2TextureObject)
+    public boolean func_110579_a(ResourceLocation par1ResourceLocation, TextureObject par2TextureObject)
     {
         boolean var3 = true;
 
         try
         {
-            ((TextureObject)par2TextureObject).loadTexture(this.theResourceManager);
+            ((TextureObject)par2TextureObject).func_110551_a(this.field_110582_d);
         }
         catch (IOException var7)
         {
             Minecraft.getMinecraft().getLogAgent().logWarningException("Failed to load texture: " + par1ResourceLocation, var7);
-            par2TextureObject = TextureUtil.missingTexture;
-            this.mapTextureObjects.put(par1ResourceLocation, par2TextureObject);
+            par2TextureObject = TextureUtil.field_111001_a;
+            this.field_110585_a.put(par1ResourceLocation, par2TextureObject);
             var3 = false;
         }
         catch (Throwable var8)
@@ -95,18 +95,18 @@
             throw new ReportedException(var5);
         }
 
-        this.mapTextureObjects.put(par1ResourceLocation, par2TextureObject);
+        this.field_110585_a.put(par1ResourceLocation, par2TextureObject);
         return var3;
     }
 
-    public TextureObject getTexture(ResourceLocation par1ResourceLocation)
+    public TextureObject func_110581_b(ResourceLocation par1ResourceLocation)
     {
-        return (TextureObject)this.mapTextureObjects.get(par1ResourceLocation);
+        return (TextureObject)this.field_110585_a.get(par1ResourceLocation);
     }
 
-    public ResourceLocation getDynamicTextureLocation(String par1Str, DynamicTexture par2DynamicTexture)
+    public ResourceLocation func_110578_a(String par1Str, DynamicTexture par2DynamicTexture)
     {
-        Integer var3 = (Integer)this.mapTextureCounters.get(par1Str);
+        Integer var3 = (Integer)this.field_110584_c.get(par1Str);
 
         if (var3 == null)
         {
@@ -117,37 +117,37 @@
             var3 = Integer.valueOf(var3.intValue() + 1);
         }
 
-        this.mapTextureCounters.put(par1Str, var3);
+        this.field_110584_c.put(par1Str, var3);
         ResourceLocation var4 = new ResourceLocation(String.format("dynamic/%s_%d", new Object[] {par1Str, var3}));
-        this.loadTexture(var4, par2DynamicTexture);
+        this.func_110579_a(var4, par2DynamicTexture);
         return var4;
     }
 
-    public void tick()
+    public void func_110550_d()
     {
-        Iterator var1 = this.listTickables.iterator();
+        Iterator var1 = this.field_110583_b.iterator();
 
         while (var1.hasNext())
         {
             Tickable var2 = (Tickable)var1.next();
-            var2.tick();
+            var2.func_110550_d();
         }
     }
 
-    public void onResourceManagerReload(ResourceManager par1ResourceManager)
+    public void func_110549_a(ResourceManager par1ResourceManager)
     {
         Config.dbg("*** Reloading textures ***");
-        Config.log("Resource pack: \"" + Config.getResourcePack().getPackName() + "\"");
-        Iterator var2 = this.mapTextureObjects.keySet().iterator();
+        Config.log("Resource pack: \"" + Config.getResourcePack().func_130077_b() + "\"");
+        Iterator var2 = this.field_110585_a.keySet().iterator();
 
         while (var2.hasNext())
         {
             ResourceLocation var3 = (ResourceLocation)var2.next();
 
-            if (var3.getResourcePath().startsWith("mcpatcher/"))
+            if (var3.func_110623_a().startsWith("mcpatcher/"))
             {
-                TextureObject var4 = (TextureObject)this.mapTextureObjects.get(var3);
-                int var5 = var4.getGlTextureId();
+                TextureObject var4 = (TextureObject)this.field_110585_a.get(var3);
+                int var5 = var4.func_110552_b();
 
                 if (var5 > 0)
                 {
@@ -158,12 +158,12 @@
             }
         }
 
-        Iterator var6 = this.mapTextureObjects.entrySet().iterator();
+        Iterator var6 = this.field_110585_a.entrySet().iterator();
 
         while (var6.hasNext())
         {
             Entry var7 = (Entry)var6.next();
-            this.loadTexture((ResourceLocation)var7.getKey(), (TextureObject)var7.getValue());
+            this.func_110579_a((ResourceLocation)var7.getKey(), (TextureObject)var7.getValue());
         }
     }
 }
