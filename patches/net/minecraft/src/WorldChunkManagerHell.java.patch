--- a/net/minecraft/src/WorldChunkManagerHell.java
+++ b/net/minecraft/src/WorldChunkManagerHell.java
@@ -6,8 +6,8 @@
 
 public class WorldChunkManagerHell extends WorldChunkManager
 {
-    /** this is the sole biome to utilize for this world */
-    private BiomeGenBase biomeToUse;
+    /** The biome generator object. */
+    private BiomeGenBase biomeGenerator;
     private float hellTemperature;
 
     /** The rainfall in the world */
@@ -15,7 +15,7 @@
 
     public WorldChunkManagerHell(BiomeGenBase par1BiomeGenBase, float par2, float par3)
     {
-        this.biomeToUse = par1BiomeGenBase;
+        this.biomeGenerator = par1BiomeGenBase;
         this.hellTemperature = par2;
         this.rainfall = par3;
     }
@@ -25,7 +25,7 @@
      */
     public BiomeGenBase getBiomeGenAt(int par1, int par2)
     {
-        return this.biomeToUse;
+        return this.biomeGenerator;
     }
 
     /**
@@ -38,7 +38,7 @@
             par1ArrayOfBiomeGenBase = new BiomeGenBase[par4 * par5];
         }
 
-        Arrays.fill(par1ArrayOfBiomeGenBase, 0, par4 * par5, this.biomeToUse);
+        Arrays.fill(par1ArrayOfBiomeGenBase, 0, par4 * par5, this.biomeGenerator);
         return par1ArrayOfBiomeGenBase;
     }
 
@@ -81,7 +81,7 @@
             par1ArrayOfBiomeGenBase = new BiomeGenBase[par4 * par5];
         }
 
-        Arrays.fill(par1ArrayOfBiomeGenBase, 0, par4 * par5, this.biomeToUse);
+        Arrays.fill(par1ArrayOfBiomeGenBase, 0, par4 * par5, this.biomeGenerator);
         return par1ArrayOfBiomeGenBase;
     }
 
@@ -100,7 +100,7 @@
      */
     public ChunkPosition findBiomePosition(int par1, int par2, int par3, List par4List, Random par5Random)
     {
-        return par4List.contains(this.biomeToUse) ? new ChunkPosition(par1 - par3 + par5Random.nextInt(par3 * 2 + 1), 0, par2 - par3 + par5Random.nextInt(par3 * 2 + 1)) : null;
+        return par4List.contains(this.biomeGenerator) ? new ChunkPosition(par1 - par3 + par5Random.nextInt(par3 * 2 + 1), 0, par2 - par3 + par5Random.nextInt(par3 * 2 + 1)) : null;
     }
 
     /**
@@ -108,6 +108,6 @@
      */
     public boolean areBiomesViable(int par1, int par2, int par3, List par4List)
     {
-        return par4List.contains(this.biomeToUse);
+        return par4List.contains(this.biomeGenerator);
     }
 }
