--- a/net/minecraft/src/EntityLivingBase.java
+++ b/net/minecraft/src/EntityLivingBase.java
@@ -9,9 +9,9 @@
 
 public abstract class EntityLivingBase extends Entity
 {
-    private static final UUID sprintingSpeedBoostModifierUUID = UUID.fromString("662A6B8D-DA3E-4C1C-8813-96EA6097278D");
-    private static final AttributeModifier sprintingSpeedBoostModifier = (new AttributeModifier(sprintingSpeedBoostModifierUUID, "Sprinting speed boost", 0.30000001192092896D, 2)).setSaved(false);
-    private BaseAttributeMap attributeMap;
+    private static final UUID field_110156_b = UUID.fromString("662A6B8D-DA3E-4C1C-8813-96EA6097278D");
+    private static final AttributeModifier field_110157_c = (new AttributeModifier(field_110156_b, "Sprinting speed boost", 0.30000001192092896D, 2)).func_111168_a(false);
+    private BaseAttributeMap field_110155_d;
     private final CombatTracker _combatTracker = new CombatTracker(this);
     private final HashMap activePotionsMap = new HashMap();
 
@@ -20,7 +20,7 @@
 
     /** Whether an arm swing is currently in progress. */
     public boolean isSwingInProgress;
-    public int swingProgressInt;
+    public int field_110158_av;
     public int arrowHitTimer;
     public float prevHealth;
 
@@ -42,8 +42,8 @@
     public int attackTime;
     public float prevSwingProgress;
     public float swingProgress;
-    public float prevLimbSwingAmount;
-    public float limbSwingAmount;
+    public float prevLimbYaw;
+    public float limbYaw;
 
     /**
      * Only relevant when limbYaw is not 0(the entity is moving). Influences where in its swing legs and arms currently
@@ -93,11 +93,7 @@
 
     /** The score value of the Mob, the amount of points the mob is worth. */
     protected int scoreValue;
-
-    /**
-     * Damage taken in the last hit. Mobs are resistant to damage less than this for a short time after taking damage.
-     */
-    protected float lastDamage;
+    protected float field_110153_bc;
 
     /** used to check whether entity is jumping. */
     protected boolean isJumping;
@@ -115,7 +111,7 @@
 
     /** The new Y position to be applied to the entity. */
     protected double newPosY;
-    protected double newPosZ;
+    protected double field_110152_bk;
 
     /** The new yaw rotation to be applied to the entity. */
     protected double newRotationYaw;
@@ -129,10 +125,8 @@
     /** is only being set, has no uses as of MC 1.1 */
     private EntityLivingBase entityLivingToAttack;
     private int revengeTimer;
-    private EntityLivingBase lastAttacker;
-
-    /** Holds the value of ticksExisted when setLastAttacker was last called. */
-    private int lastAttackerTime;
+    private EntityLivingBase field_110150_bn;
+    private int field_142016_bo;
 
     /**
      * A factor used to determine how far this entity will move each tick if it is walking on land. Adjusted by speed,
@@ -147,8 +141,8 @@
     public EntityLivingBase(World par1World)
     {
         super(par1World);
-        this.applyEntityAttributes();
-        this.setHealth(this.getMaxHealth());
+        this.func_110147_ax();
+        this.setEntityHealth(this.func_110138_aP());
         this.preventEntitySpawning = true;
         this.field_70770_ap = (float)(Math.random() + 1.0D) * 0.01F;
         this.setPosition(this.posX, this.posY, this.posZ);
@@ -166,15 +160,15 @@
         this.dataWatcher.addObject(6, Float.valueOf(1.0F));
     }
 
-    protected void applyEntityAttributes()
+    protected void func_110147_ax()
     {
-        this.getAttributeMap().func_111150_b(SharedMonsterAttributes.maxHealth);
-        this.getAttributeMap().func_111150_b(SharedMonsterAttributes.knockbackResistance);
-        this.getAttributeMap().func_111150_b(SharedMonsterAttributes.movementSpeed);
+        this.func_110140_aT().func_111150_b(SharedMonsterAttributes.field_111267_a);
+        this.func_110140_aT().func_111150_b(SharedMonsterAttributes.field_111266_c);
+        this.func_110140_aT().func_111150_b(SharedMonsterAttributes.field_111263_d);
 
         if (!this.isAIEnabled())
         {
-            this.getEntityAttribute(SharedMonsterAttributes.movementSpeed).setAttribute(0.10000000149011612D);
+            this.func_110148_a(SharedMonsterAttributes.field_111263_d).func_111128_a(0.10000000149011612D);
         }
     }
 
@@ -292,7 +286,7 @@
             --this.hurtResistantTime;
         }
 
-        if (this.getHealth() <= 0.0F)
+        if (this.func_110143_aJ() <= 0.0F)
         {
             this.onDeathUpdate();
         }
@@ -306,9 +300,9 @@
             this.attackingPlayer = null;
         }
 
-        if (this.lastAttacker != null && !this.lastAttacker.isEntityAlive())
+        if (this.field_110150_bn != null && !this.field_110150_bn.isEntityAlive())
         {
-            this.lastAttacker = null;
+            this.field_110150_bn = null;
         }
 
         if (this.entityLivingToAttack != null && !this.entityLivingToAttack.isEntityAlive())
@@ -414,28 +408,28 @@
         this.revengeTimer = this.ticksExisted;
     }
 
-    public EntityLivingBase getLastAttacker()
+    public EntityLivingBase func_110144_aD()
     {
-        return this.lastAttacker;
+        return this.field_110150_bn;
     }
 
-    public int getLastAttackerTime()
+    public int func_142013_aG()
     {
-        return this.lastAttackerTime;
+        return this.field_142016_bo;
     }
 
-    public void setLastAttacker(Entity par1Entity)
+    public void func_130011_c(Entity par1Entity)
     {
         if (par1Entity instanceof EntityLivingBase)
         {
-            this.lastAttacker = (EntityLivingBase)par1Entity;
+            this.field_110150_bn = (EntityLivingBase)par1Entity;
         }
         else
         {
-            this.lastAttacker = null;
+            this.field_110150_bn = null;
         }
 
-        this.lastAttackerTime = this.ticksExisted;
+        this.field_142016_bo = this.ticksExisted;
     }
 
     public int getAge()
@@ -448,12 +442,12 @@
      */
     public void writeEntityToNBT(NBTTagCompound par1NBTTagCompound)
     {
-        par1NBTTagCompound.setFloat("HealF", this.getHealth());
-        par1NBTTagCompound.setShort("Health", (short)((int)Math.ceil((double)this.getHealth())));
+        par1NBTTagCompound.setFloat("HealF", this.func_110143_aJ());
+        par1NBTTagCompound.setShort("Health", (short)((int)Math.ceil((double)this.func_110143_aJ())));
         par1NBTTagCompound.setShort("HurtTime", (short)this.hurtTime);
         par1NBTTagCompound.setShort("DeathTime", (short)this.deathTime);
         par1NBTTagCompound.setShort("AttackTime", (short)this.attackTime);
-        par1NBTTagCompound.setFloat("AbsorptionAmount", this.getAbsorptionAmount());
+        par1NBTTagCompound.setFloat("AbsorptionAmount", this.func_110139_bj());
         ItemStack[] var2 = this.getLastActiveItems();
         int var3 = var2.length;
         int var4;
@@ -465,11 +459,11 @@
 
             if (var5 != null)
             {
-                this.attributeMap.removeAttributeModifiers(var5.getAttributeModifiers());
+                this.field_110155_d.func_111148_a(var5.func_111283_C());
             }
         }
 
-        par1NBTTagCompound.setTag("Attributes", SharedMonsterAttributes.func_111257_a(this.getAttributeMap()));
+        par1NBTTagCompound.setTag("Attributes", SharedMonsterAttributes.func_111257_a(this.func_110140_aT()));
         var2 = this.getLastActiveItems();
         var3 = var2.length;
 
@@ -479,7 +473,7 @@
 
             if (var5 != null)
             {
-                this.attributeMap.applyAttributeModifiers(var5.getAttributeModifiers());
+                this.field_110155_d.func_111147_b(var5.func_111283_C());
             }
         }
 
@@ -503,11 +497,11 @@
      */
     public void readEntityFromNBT(NBTTagCompound par1NBTTagCompound)
     {
-        this.setAbsorptionAmount(par1NBTTagCompound.getFloat("AbsorptionAmount"));
+        this.func_110149_m(par1NBTTagCompound.getFloat("AbsorptionAmount"));
 
         if (par1NBTTagCompound.hasKey("Attributes") && this.worldObj != null && !this.worldObj.isRemote)
         {
-            SharedMonsterAttributes.func_111260_a(this.getAttributeMap(), par1NBTTagCompound.getTagList("Attributes"), this.worldObj == null ? null : this.worldObj.getWorldLogAgent());
+            SharedMonsterAttributes.func_111260_a(this.func_110140_aT(), par1NBTTagCompound.getTagList("Attributes"), this.worldObj == null ? null : this.worldObj.getWorldLogAgent());
         }
 
         if (par1NBTTagCompound.hasKey("ActiveEffects"))
@@ -524,7 +518,7 @@
 
         if (par1NBTTagCompound.hasKey("HealF"))
         {
-            this.setHealth(par1NBTTagCompound.getFloat("HealF"));
+            this.setEntityHealth(par1NBTTagCompound.getFloat("HealF"));
         }
         else
         {
@@ -532,15 +526,15 @@
 
             if (var6 == null)
             {
-                this.setHealth(this.getMaxHealth());
+                this.setEntityHealth(this.func_110138_aP());
             }
             else if (var6.getId() == 5)
             {
-                this.setHealth(((NBTTagFloat)var6).data);
+                this.setEntityHealth(((NBTTagFloat)var6).data);
             }
             else if (var6.getId() == 2)
             {
-                this.setHealth((float)((NBTTagShort)var6).data);
+                this.setEntityHealth((float)((NBTTagShort)var6).data);
             }
         }
 
@@ -737,7 +731,7 @@
 
         if (!this.worldObj.isRemote)
         {
-            Potion.potionTypes[par1PotionEffect.getPotionID()].applyAttributesModifiersToEntity(this, this.getAttributeMap(), par1PotionEffect.getAmplifier());
+            Potion.potionTypes[par1PotionEffect.getPotionID()].func_111185_a(this, this.func_110140_aT(), par1PotionEffect.getAmplifier());
         }
     }
 
@@ -747,8 +741,8 @@
 
         if (par2 && !this.worldObj.isRemote)
         {
-            Potion.potionTypes[par1PotionEffect.getPotionID()].removeAttributesModifiersFromEntity(this, this.getAttributeMap(), par1PotionEffect.getAmplifier());
-            Potion.potionTypes[par1PotionEffect.getPotionID()].applyAttributesModifiersToEntity(this, this.getAttributeMap(), par1PotionEffect.getAmplifier());
+            Potion.potionTypes[par1PotionEffect.getPotionID()].func_111187_a(this, this.func_110140_aT(), par1PotionEffect.getAmplifier());
+            Potion.potionTypes[par1PotionEffect.getPotionID()].func_111185_a(this, this.func_110140_aT(), par1PotionEffect.getAmplifier());
         }
     }
 
@@ -758,7 +752,7 @@
 
         if (!this.worldObj.isRemote)
         {
-            Potion.potionTypes[par1PotionEffect.getPotionID()].removeAttributesModifiersFromEntity(this, this.getAttributeMap(), par1PotionEffect.getAmplifier());
+            Potion.potionTypes[par1PotionEffect.getPotionID()].func_111187_a(this, this.func_110140_aT(), par1PotionEffect.getAmplifier());
         }
     }
 
@@ -767,22 +761,22 @@
      */
     public void heal(float par1)
     {
-        float var2 = this.getHealth();
+        float var2 = this.func_110143_aJ();
 
         if (var2 > 0.0F)
         {
-            this.setHealth(var2 + par1);
+            this.setEntityHealth(var2 + par1);
         }
     }
 
-    public final float getHealth()
+    public final float func_110143_aJ()
     {
-        return this.dataWatcher.getWatchableObjectFloat(6);
+        return this.dataWatcher.func_111145_d(6);
     }
 
-    public void setHealth(float par1)
+    public void setEntityHealth(float par1)
     {
-        this.dataWatcher.updateObject(6, Float.valueOf(MathHelper.clamp_float(par1, 0.0F, this.getMaxHealth())));
+        this.dataWatcher.updateObject(6, Float.valueOf(MathHelper.clamp_float(par1, 0.0F, this.func_110138_aP())));
     }
 
     /**
@@ -802,7 +796,7 @@
         {
             this.entityAge = 0;
 
-            if (this.getHealth() <= 0.0F)
+            if (this.func_110143_aJ() <= 0.0F)
             {
                 return false;
             }
@@ -818,24 +812,24 @@
                     par2 *= 0.75F;
                 }
 
-                this.limbSwingAmount = 1.5F;
+                this.limbYaw = 1.5F;
                 boolean var3 = true;
 
                 if ((float)this.hurtResistantTime > (float)this.maxHurtResistantTime / 2.0F)
                 {
-                    if (par2 <= this.lastDamage)
+                    if (par2 <= this.field_110153_bc)
                     {
                         return false;
                     }
 
-                    this.damageEntity(par1DamageSource, par2 - this.lastDamage);
-                    this.lastDamage = par2;
+                    this.damageEntity(par1DamageSource, par2 - this.field_110153_bc);
+                    this.field_110153_bc = par2;
                     var3 = false;
                 }
                 else
                 {
-                    this.lastDamage = par2;
-                    this.prevHealth = this.getHealth();
+                    this.field_110153_bc = par2;
+                    this.prevHealth = this.func_110143_aJ();
                     this.hurtResistantTime = this.maxHurtResistantTime;
                     this.damageEntity(par1DamageSource, par2);
                     this.hurtTime = this.maxHurtTime = 10;
@@ -896,7 +890,7 @@
                     }
                 }
 
-                if (this.getHealth() <= 0.0F)
+                if (this.func_110143_aJ() <= 0.0F)
                 {
                     if (var3)
                     {
@@ -994,7 +988,7 @@
      */
     public void knockBack(Entity par1Entity, float par2, double par3, double par5)
     {
-        if (this.rand.nextDouble() >= this.getEntityAttribute(SharedMonsterAttributes.knockbackResistance).getAttributeValue())
+        if (this.rand.nextDouble() >= this.func_110148_a(SharedMonsterAttributes.field_111266_c).func_111126_e())
         {
             this.isAirBorne = true;
             float var7 = MathHelper.sqrt_double(par3 * par3 + par5 * par5);
@@ -1054,7 +1048,7 @@
      */
     public boolean isEntityAlive()
     {
-        return !this.isDead && this.getHealth() > 0.0F;
+        return !this.isDead && this.func_110143_aJ() > 0.0F;
     }
 
     /**
@@ -1196,15 +1190,15 @@
             par2 = this.applyArmorCalculations(par1DamageSource, par2);
             par2 = this.applyPotionDamageCalculations(par1DamageSource, par2);
             float var3 = par2;
-            par2 = Math.max(par2 - this.getAbsorptionAmount(), 0.0F);
-            this.setAbsorptionAmount(this.getAbsorptionAmount() - (var3 - par2));
+            par2 = Math.max(par2 - this.func_110139_bj(), 0.0F);
+            this.func_110149_m(this.func_110139_bj() - (var3 - par2));
 
             if (par2 != 0.0F)
             {
-                float var4 = this.getHealth();
-                this.setHealth(var4 - par2);
+                float var4 = this.func_110143_aJ();
+                this.setEntityHealth(var4 - par2);
                 this.func_110142_aN().func_94547_a(par1DamageSource, var4, par2);
-                this.setAbsorptionAmount(this.getAbsorptionAmount() - par2);
+                this.func_110149_m(this.func_110139_bj() - par2);
             }
         }
     }
@@ -1219,9 +1213,9 @@
         return (EntityLivingBase)(this._combatTracker.func_94550_c() != null ? this._combatTracker.func_94550_c() : (this.attackingPlayer != null ? this.attackingPlayer : (this.entityLivingToAttack != null ? this.entityLivingToAttack : null)));
     }
 
-    public final float getMaxHealth()
+    public final float func_110138_aP()
     {
-        return (float)this.getEntityAttribute(SharedMonsterAttributes.maxHealth).getAttributeValue();
+        return (float)this.func_110148_a(SharedMonsterAttributes.field_111267_a).func_111126_e();
     }
 
     /**
@@ -1254,9 +1248,9 @@
      */
     public void swingItem()
     {
-        if (!this.isSwingInProgress || this.swingProgressInt >= this.getArmSwingAnimationEnd() / 2 || this.swingProgressInt < 0)
+        if (!this.isSwingInProgress || this.field_110158_av >= this.getArmSwingAnimationEnd() / 2 || this.field_110158_av < 0)
         {
-            this.swingProgressInt = -1;
+            this.field_110158_av = -1;
             this.isSwingInProgress = true;
 
             if (this.worldObj instanceof WorldServer)
@@ -1270,7 +1264,7 @@
     {
         if (par1 == 2)
         {
-            this.limbSwingAmount = 1.5F;
+            this.limbYaw = 1.5F;
             this.hurtResistantTime = this.maxHurtResistantTime;
             this.hurtTime = this.maxHurtTime = 10;
             this.attackedAtYaw = 0.0F;
@@ -1280,7 +1274,7 @@
         else if (par1 == 3)
         {
             this.playSound(this.getDeathSound(), this.getSoundVolume(), (this.rand.nextFloat() - this.rand.nextFloat()) * 0.2F + 1.0F);
-            this.setHealth(0.0F);
+            this.setEntityHealth(0.0F);
             this.onDeath(DamageSource.generic);
         }
         else
@@ -1306,35 +1300,35 @@
 
         if (this.isSwingInProgress)
         {
-            ++this.swingProgressInt;
+            ++this.field_110158_av;
 
-            if (this.swingProgressInt >= var1)
+            if (this.field_110158_av >= var1)
             {
-                this.swingProgressInt = 0;
+                this.field_110158_av = 0;
                 this.isSwingInProgress = false;
             }
         }
         else
         {
-            this.swingProgressInt = 0;
+            this.field_110158_av = 0;
         }
 
-        this.swingProgress = (float)this.swingProgressInt / (float)var1;
+        this.swingProgress = (float)this.field_110158_av / (float)var1;
     }
 
-    public AttributeInstance getEntityAttribute(Attribute par1Attribute)
+    public AttributeInstance func_110148_a(Attribute par1Attribute)
     {
-        return this.getAttributeMap().getAttributeInstance(par1Attribute);
+        return this.func_110140_aT().func_111151_a(par1Attribute);
     }
 
-    public BaseAttributeMap getAttributeMap()
+    public BaseAttributeMap func_110140_aT()
     {
-        if (this.attributeMap == null)
+        if (this.field_110155_d == null)
         {
-            this.attributeMap = new ServersideAttributeMap();
+            this.field_110155_d = new ServersideAttributeMap();
         }
 
-        return this.attributeMap;
+        return this.field_110155_d;
     }
 
     /**
@@ -1366,16 +1360,16 @@
     public void setSprinting(boolean par1)
     {
         super.setSprinting(par1);
-        AttributeInstance var2 = this.getEntityAttribute(SharedMonsterAttributes.movementSpeed);
+        AttributeInstance var2 = this.func_110148_a(SharedMonsterAttributes.field_111263_d);
 
-        if (var2.getModifier(sprintingSpeedBoostModifierUUID) != null)
+        if (var2.func_111127_a(field_110156_b) != null)
         {
-            var2.removeModifier(sprintingSpeedBoostModifier);
+            var2.func_111124_b(field_110157_c);
         }
 
         if (par1)
         {
-            var2.applyModifier(sprintingSpeedBoostModifier);
+            var2.func_111121_a(field_110157_c);
         }
     }
 
@@ -1402,7 +1396,7 @@
      */
     protected boolean isMovementBlocked()
     {
-        return this.getHealth() <= 0.0F;
+        return this.func_110143_aJ() <= 0.0F;
     }
 
     /**
@@ -1413,10 +1407,7 @@
         this.setLocationAndAngles(par1, par3, par5, this.rotationYaw, this.rotationPitch);
     }
 
-    /**
-     * Moves the entity to a position out of the way of its mount.
-     */
-    public void dismountEntity(Entity par1Entity)
+    public void func_110145_l(Entity par1Entity)
     {
         double var3 = par1Entity.posX;
         double var5 = par1Entity.boundingBox.minY + (double)par1Entity.height;
@@ -1634,7 +1625,7 @@
             this.motionZ *= (double)var3;
         }
 
-        this.prevLimbSwingAmount = this.limbSwingAmount;
+        this.prevLimbYaw = this.limbYaw;
         var10 = this.posX - this.prevPosX;
         double var9 = this.posZ - this.prevPosZ;
         float var12 = MathHelper.sqrt_double(var10 * var10 + var9 * var9) * 4.0F;
@@ -1644,8 +1635,8 @@
             var12 = 1.0F;
         }
 
-        this.limbSwingAmount += (var12 - this.limbSwingAmount) * 0.4F;
-        this.limbSwing += this.limbSwingAmount;
+        this.limbYaw += (var12 - this.limbYaw) * 0.4F;
+        this.limbSwing += this.limbYaw;
     }
 
     /**
@@ -1674,7 +1665,7 @@
 
     public boolean attackEntityAsMob(Entity par1Entity)
     {
-        this.setLastAttacker(par1Entity);
+        this.func_130011_c(par1Entity);
         return false;
     }
 
@@ -1723,12 +1714,12 @@
 
                     if (var3 != null)
                     {
-                        this.attributeMap.removeAttributeModifiers(var3.getAttributeModifiers());
+                        this.field_110155_d.func_111148_a(var3.func_111283_C());
                     }
 
                     if (var4 != null)
                     {
-                        this.attributeMap.applyAttributeModifiers(var4.getAttributeModifiers());
+                        this.field_110155_d.func_111147_b(var4.func_111283_C());
                     }
 
                     this.previousEquipment[var2] = var4 == null ? null : var4.copy();
@@ -1859,7 +1850,7 @@
         {
             double var1 = this.posX + (this.newPosX - this.posX) / (double)this.newPosRotationIncrements;
             double var3 = this.posY + (this.newPosY - this.posY) / (double)this.newPosRotationIncrements;
-            double var5 = this.posZ + (this.newPosZ - this.posZ) / (double)this.newPosRotationIncrements;
+            double var5 = this.posZ + (this.field_110152_bk - this.posZ) / (double)this.newPosRotationIncrements;
             double var7 = MathHelper.wrapAngleTo180_double(this.newRotationYaw - (double)this.rotationYaw);
             this.rotationYaw = (float)((double)this.rotationYaw + var7 / (double)this.newPosRotationIncrements);
             this.rotationPitch = (float)((double)this.rotationPitch + (this.newRotationPitch - (double)this.rotationPitch) / (double)this.newPosRotationIncrements);
@@ -2000,7 +1991,7 @@
         this.yOffset = 0.0F;
         this.newPosX = par1;
         this.newPosY = par3;
-        this.newPosZ = par5;
+        this.field_110152_bk = par5;
         this.newRotationYaw = (double)par7;
         this.newRotationPitch = (double)par8;
         this.newPosRotationIncrements = par9;
@@ -2171,7 +2162,7 @@
      */
     protected void setBeenAttacked()
     {
-        this.velocityChanged = this.rand.nextDouble() >= this.getEntityAttribute(SharedMonsterAttributes.knockbackResistance).getAttributeValue();
+        this.velocityChanged = this.rand.nextDouble() >= this.func_110148_a(SharedMonsterAttributes.field_111266_c).func_111126_e();
     }
 
     public float getRotationYawHead()
@@ -2187,12 +2178,12 @@
         this.rotationYawHead = par1;
     }
 
-    public float getAbsorptionAmount()
+    public float func_110139_bj()
     {
         return this.field_110151_bq;
     }
 
-    public void setAbsorptionAmount(float par1)
+    public void func_110149_m(float par1)
     {
         if (par1 < 0.0F)
         {
@@ -2207,16 +2198,13 @@
         return null;
     }
 
-    public boolean isOnSameTeam(EntityLivingBase par1EntityLivingBase)
+    public boolean func_142014_c(EntityLivingBase par1EntityLivingBase)
     {
-        return this.isOnTeam(par1EntityLivingBase.getTeam());
+        return this.func_142012_a(par1EntityLivingBase.getTeam());
     }
 
-    /**
-     * Returns true if the entity is on a specific team.
-     */
-    public boolean isOnTeam(Team par1Team)
+    public boolean func_142012_a(Team par1Team)
     {
-        return this.getTeam() != null ? this.getTeam().isSameTeam(par1Team) : false;
+        return this.getTeam() != null ? this.getTeam().func_142054_a(par1Team) : false;
     }
 }
