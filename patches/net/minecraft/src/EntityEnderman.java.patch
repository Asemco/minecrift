--- a/net/minecraft/src/EntityEnderman.java
+++ b/net/minecraft/src/EntityEnderman.java
@@ -4,21 +4,17 @@
 
 public class EntityEnderman extends EntityMob
 {
-    private static final UUID attackingSpeedBoostModifierUUID = UUID.fromString("020E0DFB-87AE-4653-9556-831010E291A0");
-    private static final AttributeModifier attackingSpeedBoostModifier = (new AttributeModifier(attackingSpeedBoostModifierUUID, "Attacking speed boost", 6.199999809265137D, 0)).setSaved(false);
+    private static final UUID field_110192_bp = UUID.fromString("020E0DFB-87AE-4653-9556-831010E291A0");
+    private static final AttributeModifier field_110193_bq = (new AttributeModifier(field_110192_bp, "Attacking speed boost", 6.199999809265137D, 0)).func_111168_a(false);
     private static boolean[] carriableBlocks = new boolean[256];
 
     /**
      * Counter to delay the teleportation of an enderman towards the currently attacked target
      */
     private int teleportDelay;
-
-    /**
-     * A player must stare at an enderman for 5 ticks before it becomes aggressive. This field counts those ticks.
-     */
-    private int stareTimer;
-    private Entity lastEntityToAttack;
-    private boolean isAggressive;
+    private int field_70826_g;
+    private Entity field_110194_bu;
+    private boolean field_104003_g;
 
     public EntityEnderman(World par1World)
     {
@@ -27,12 +23,12 @@
         this.stepHeight = 1.0F;
     }
 
-    protected void applyEntityAttributes()
+    protected void func_110147_ax()
     {
-        super.applyEntityAttributes();
-        this.getEntityAttribute(SharedMonsterAttributes.maxHealth).setAttribute(40.0D);
-        this.getEntityAttribute(SharedMonsterAttributes.movementSpeed).setAttribute(0.30000001192092896D);
-        this.getEntityAttribute(SharedMonsterAttributes.attackDamage).setAttribute(7.0D);
+        super.func_110147_ax();
+        this.func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a(40.0D);
+        this.func_110148_a(SharedMonsterAttributes.field_111263_d).func_111128_a(0.30000001192092896D);
+        this.func_110148_a(SharedMonsterAttributes.field_111264_e).func_111128_a(7.0D);
     }
 
     protected void entityInit()
@@ -75,23 +71,23 @@
         {
             if (this.shouldAttackPlayer(var1))
             {
-                this.isAggressive = true;
+                this.field_104003_g = true;
 
-                if (this.stareTimer == 0)
+                if (this.field_70826_g == 0)
                 {
                     this.worldObj.playSoundAtEntity(var1, "mob.endermen.stare", 1.0F, 1.0F);
                 }
 
-                if (this.stareTimer++ == 5)
+                if (this.field_70826_g++ == 5)
                 {
-                    this.stareTimer = 0;
+                    this.field_70826_g = 0;
                     this.setScreaming(true);
                     return var1;
                 }
             }
             else
             {
-                this.stareTimer = 0;
+                this.field_70826_g = 0;
             }
         }
 
@@ -131,18 +127,18 @@
             this.attackEntityFrom(DamageSource.drown, 1.0F);
         }
 
-        if (this.lastEntityToAttack != this.entityToAttack)
+        if (this.field_110194_bu != this.entityToAttack)
         {
-            AttributeInstance var1 = this.getEntityAttribute(SharedMonsterAttributes.movementSpeed);
-            var1.removeModifier(attackingSpeedBoostModifier);
+            AttributeInstance var1 = this.func_110148_a(SharedMonsterAttributes.field_111263_d);
+            var1.func_111124_b(field_110193_bq);
 
             if (this.entityToAttack != null)
             {
-                var1.applyModifier(attackingSpeedBoostModifier);
+                var1.func_111121_a(field_110193_bq);
             }
         }
 
-        this.lastEntityToAttack = this.entityToAttack;
+        this.field_110194_bu = this.entityToAttack;
         int var6;
 
         if (!this.worldObj.isRemote && this.worldObj.getGameRules().getGameRuleBooleanValue("mobGriefing"))
@@ -197,7 +193,7 @@
             {
                 this.entityToAttack = null;
                 this.setScreaming(false);
-                this.isAggressive = false;
+                this.field_104003_g = false;
                 this.teleportRandomly();
             }
         }
@@ -206,11 +202,11 @@
         {
             this.entityToAttack = null;
             this.setScreaming(false);
-            this.isAggressive = false;
+            this.field_104003_g = false;
             this.teleportRandomly();
         }
 
-        if (this.isScreaming() && !this.isAggressive && this.rand.nextInt(100) == 0)
+        if (this.isScreaming() && !this.field_104003_g && this.rand.nextInt(100) == 0)
         {
             this.setScreaming(false);
         }
@@ -447,12 +443,12 @@
 
             if (par1DamageSource instanceof EntityDamageSource && par1DamageSource.getEntity() instanceof EntityPlayer)
             {
-                this.isAggressive = true;
+                this.field_104003_g = true;
             }
 
             if (par1DamageSource instanceof EntityDamageSourceIndirect)
             {
-                this.isAggressive = false;
+                this.field_104003_g = false;
 
                 for (int var3 = 0; var3 < 64; ++var3)
                 {
