--- a/net/minecraft/src/ComponentVillageField2.java
+++ b/net/minecraft/src/ComponentVillageField2.java
@@ -5,14 +5,14 @@
 
 public class ComponentVillageField2 extends ComponentVillage
 {
+    private int averageGroundLevel = -1;
+
     /** First crop type for this field. */
     private int cropTypeA;
 
     /** Second crop type for this field. */
     private int cropTypeB;
 
-    public ComponentVillageField2() {}
-
     public ComponentVillageField2(ComponentVillageStartPiece par1ComponentVillageStartPiece, int par2, Random par3Random, StructureBoundingBox par4StructureBoundingBox, int par5)
     {
         super(par1ComponentVillageStartPiece, par2);
@@ -22,20 +22,6 @@
         this.cropTypeB = this.pickRandomCrop(par3Random);
     }
 
-    protected void func_143012_a(NBTTagCompound par1NBTTagCompound)
-    {
-        super.func_143012_a(par1NBTTagCompound);
-        par1NBTTagCompound.setInteger("CA", this.cropTypeA);
-        par1NBTTagCompound.setInteger("CB", this.cropTypeB);
-    }
-
-    protected void func_143011_b(NBTTagCompound par1NBTTagCompound)
-    {
-        super.func_143011_b(par1NBTTagCompound);
-        this.cropTypeA = par1NBTTagCompound.getInteger("CA");
-        this.cropTypeB = par1NBTTagCompound.getInteger("CB");
-    }
-
     /**
      * Returns a crop type to be planted on this field.
      */
@@ -45,10 +31,8 @@
         {
             case 0:
                 return Block.carrot.blockID;
-
             case 1:
                 return Block.potato.blockID;
-
             default:
                 return Block.crops.blockID;
         }
@@ -66,16 +50,16 @@
      */
     public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
     {
-        if (this.field_143015_k < 0)
+        if (this.averageGroundLevel < 0)
         {
-            this.field_143015_k = this.getAverageGroundLevel(par1World, par3StructureBoundingBox);
+            this.averageGroundLevel = this.getAverageGroundLevel(par1World, par3StructureBoundingBox);
 
-            if (this.field_143015_k < 0)
+            if (this.averageGroundLevel < 0)
             {
                 return true;
             }
 
-            this.boundingBox.offset(0, this.field_143015_k - this.boundingBox.maxY + 4 - 1, 0);
+            this.boundingBox.offset(0, this.averageGroundLevel - this.boundingBox.maxY + 4 - 1, 0);
         }
 
         this.fillWithBlocks(par1World, par3StructureBoundingBox, 0, 1, 0, 6, 4, 8, 0, 0, false);
