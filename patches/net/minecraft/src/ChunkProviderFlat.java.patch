--- a/net/minecraft/src/ChunkProviderFlat.java
+++ b/net/minecraft/src/ChunkProviderFlat.java
@@ -10,12 +10,12 @@
 {
     private World worldObj;
     private Random random;
-    private final byte[] cachedBlockIDs = new byte[256];
-    private final byte[] cachedBlockMetadata = new byte[256];
-    private final FlatGeneratorInfo flatWorldGenInfo;
+    private final byte[] field_82700_c = new byte[256];
+    private final byte[] field_82698_d = new byte[256];
+    private final FlatGeneratorInfo field_82699_e;
     private final List structureGenerators = new ArrayList();
-    private final boolean hasDecoration;
-    private final boolean hasDungeons;
+    private final boolean field_82697_g;
+    private final boolean field_82702_h;
     private WorldGenLakes waterLakeGenerator;
     private WorldGenLakes lavaLakeGenerator;
 
@@ -23,11 +23,11 @@
     {
         this.worldObj = par1World;
         this.random = new Random(par2);
-        this.flatWorldGenInfo = FlatGeneratorInfo.createFlatGeneratorFromString(par5Str);
+        this.field_82699_e = FlatGeneratorInfo.createFlatGeneratorFromString(par5Str);
 
         if (par4)
         {
-            Map var6 = this.flatWorldGenInfo.getWorldFeatures();
+            Map var6 = this.field_82699_e.getWorldFeatures();
 
             if (var6.containsKey("village"))
             {
@@ -57,20 +57,20 @@
             }
         }
 
-        this.hasDecoration = this.flatWorldGenInfo.getWorldFeatures().containsKey("decoration");
+        this.field_82697_g = this.field_82699_e.getWorldFeatures().containsKey("decoration");
 
-        if (this.flatWorldGenInfo.getWorldFeatures().containsKey("lake"))
+        if (this.field_82699_e.getWorldFeatures().containsKey("lake"))
         {
             this.waterLakeGenerator = new WorldGenLakes(Block.waterStill.blockID);
         }
 
-        if (this.flatWorldGenInfo.getWorldFeatures().containsKey("lava_lake"))
+        if (this.field_82699_e.getWorldFeatures().containsKey("lava_lake"))
         {
             this.lavaLakeGenerator = new WorldGenLakes(Block.lavaStill.blockID);
         }
 
-        this.hasDungeons = this.flatWorldGenInfo.getWorldFeatures().containsKey("dungeon");
-        Iterator var9 = this.flatWorldGenInfo.getFlatLayers().iterator();
+        this.field_82702_h = this.field_82699_e.getWorldFeatures().containsKey("dungeon");
+        Iterator var9 = this.field_82699_e.getFlatLayers().iterator();
 
         while (var9.hasNext())
         {
@@ -78,8 +78,8 @@
 
             for (int var8 = var10.getMinY(); var8 < var10.getMinY() + var10.getLayerCount(); ++var8)
             {
-                this.cachedBlockIDs[var8] = (byte)(var10.getFillBlock() & 255);
-                this.cachedBlockMetadata[var8] = (byte)var10.getFillBlockMeta();
+                this.field_82700_c[var8] = (byte)(var10.getFillBlock() & 255);
+                this.field_82698_d[var8] = (byte)var10.getFillBlockMeta();
             }
         }
     }
@@ -100,7 +100,7 @@
     {
         Chunk var3 = new Chunk(this.worldObj, par1, par2);
 
-        for (int var4 = 0; var4 < this.cachedBlockIDs.length; ++var4)
+        for (int var4 = 0; var4 < this.field_82700_c.length; ++var4)
         {
             int var5 = var4 >> 4;
             ExtendedBlockStorage var6 = var3.getBlockStorageArray()[var5];
@@ -115,8 +115,8 @@
             {
                 for (int var8 = 0; var8 < 16; ++var8)
                 {
-                    var6.setExtBlockID(var7, var4 & 15, var8, this.cachedBlockIDs[var4] & 255);
-                    var6.setExtBlockMetadata(var7, var4 & 15, var8, this.cachedBlockMetadata[var4]);
+                    var6.setExtBlockID(var7, var4 & 15, var8, this.field_82700_c[var4] & 255);
+                    var6.setExtBlockMetadata(var7, var4 & 15, var8, this.field_82698_d[var4]);
                 }
             }
         }
@@ -200,7 +200,7 @@
             }
         }
 
-        if (this.hasDungeons)
+        if (this.field_82702_h)
         {
             for (var16 = 0; var16 < 8; ++var16)
             {
@@ -211,7 +211,7 @@
             }
         }
 
-        if (this.hasDecoration)
+        if (this.field_82697_g)
         {
             var6.decorate(this.worldObj, this.random, var4, var5);
         }
@@ -226,11 +226,7 @@
         return true;
     }
 
-    /**
-     * Save extra data not associated with any Chunk.  Not saved during autosave, only during world unload.  Currently
-     * unimplemented.
-     */
-    public void saveExtraData() {}
+    public void func_104112_b() {}
 
     /**
      * Unloads chunks that are marked to be unloaded. This is not guaranteed to unload every such chunk.
