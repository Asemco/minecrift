--- a/net/minecraft/src/CustomSkyLayer.java
+++ b/net/minecraft/src/CustomSkyLayer.java
@@ -1,9 +1,9 @@
 package net.minecraft.src;
 
 import java.util.Properties;
+import net.minecraft.client.renderer.GlStateManager;
 import net.minecraft.client.renderer.Tessellator;
 import net.minecraft.client.renderer.WorldRenderer;
-import org.lwjgl.opengl.GL11;
 
 public class CustomSkyLayer
 {
@@ -12,7 +12,7 @@
     private int endFadeIn = -1;
     private int startFadeOut = -1;
     private int endFadeOut = -1;
-    private int blend = 0;
+    private int blend = 1;
     private boolean rotate = false;
     private float speed = 1.0F;
     private float[] axis;
@@ -244,34 +244,34 @@
 
         if (brightness >= 1.0E-4F)
         {
-            GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.textureId);
+            GlStateManager.func_179144_i(this.textureId);
             Blender.setupBlend(this.blend, brightness);
-            GL11.glPushMatrix();
+            GlStateManager.pushMatrix();
 
             if (this.rotate)
             {
-                GL11.glRotatef(celestialAngle * 360.0F * this.speed, this.axis[0], this.axis[1], this.axis[2]);
+                GlStateManager.rotate(celestialAngle * 360.0F * this.speed, this.axis[0], this.axis[1], this.axis[2]);
             }
 
             Tessellator tess = Tessellator.getInstance();
-            GL11.glRotatef(90.0F, 1.0F, 0.0F, 0.0F);
-            GL11.glRotatef(-90.0F, 0.0F, 0.0F, 1.0F);
+            GlStateManager.rotate(90.0F, 1.0F, 0.0F, 0.0F);
+            GlStateManager.rotate(-90.0F, 0.0F, 0.0F, 1.0F);
             this.renderSide(tess, 4);
-            GL11.glPushMatrix();
-            GL11.glRotatef(90.0F, 1.0F, 0.0F, 0.0F);
+            GlStateManager.pushMatrix();
+            GlStateManager.rotate(90.0F, 1.0F, 0.0F, 0.0F);
             this.renderSide(tess, 1);
-            GL11.glPopMatrix();
-            GL11.glPushMatrix();
-            GL11.glRotatef(-90.0F, 1.0F, 0.0F, 0.0F);
+            GlStateManager.popMatrix();
+            GlStateManager.pushMatrix();
+            GlStateManager.rotate(-90.0F, 1.0F, 0.0F, 0.0F);
             this.renderSide(tess, 0);
-            GL11.glPopMatrix();
-            GL11.glRotatef(90.0F, 0.0F, 0.0F, 1.0F);
+            GlStateManager.popMatrix();
+            GlStateManager.rotate(90.0F, 0.0F, 0.0F, 1.0F);
             this.renderSide(tess, 5);
-            GL11.glRotatef(90.0F, 0.0F, 0.0F, 1.0F);
+            GlStateManager.rotate(90.0F, 0.0F, 0.0F, 1.0F);
             this.renderSide(tess, 2);
-            GL11.glRotatef(90.0F, 0.0F, 0.0F, 1.0F);
+            GlStateManager.rotate(90.0F, 0.0F, 0.0F, 1.0F);
             this.renderSide(tess, 3);
-            GL11.glPopMatrix();
+            GlStateManager.popMatrix();
         }
     }
 
