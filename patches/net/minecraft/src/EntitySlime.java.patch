--- a/net/minecraft/src/EntitySlime.java
+++ b/net/minecraft/src/EntitySlime.java
@@ -2,9 +2,9 @@
 
 public class EntitySlime extends EntityLiving implements IMob
 {
-    public float squishAmount;
-    public float squishFactor;
-    public float prevSquishFactor;
+    public float field_70813_a;
+    public float field_70811_b;
+    public float field_70812_c;
 
     /** the time between each jump of the slime */
     private int slimeJumpDelay;
@@ -29,8 +29,8 @@
         this.dataWatcher.updateObject(16, new Byte((byte)par1));
         this.setSize(0.6F * (float)par1, 0.6F * (float)par1);
         this.setPosition(this.posX, this.posY, this.posZ);
-        this.getEntityAttribute(SharedMonsterAttributes.maxHealth).setAttribute((double)(par1 * par1));
-        this.setHealth(this.getMaxHealth());
+        this.func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a((double)(par1 * par1));
+        this.setEntityHealth(this.func_110138_aP());
         this.experienceValue = par1;
     }
 
@@ -86,8 +86,8 @@
             this.isDead = true;
         }
 
-        this.squishFactor += (this.squishAmount - this.squishFactor) * 0.5F;
-        this.prevSquishFactor = this.squishFactor;
+        this.field_70811_b += (this.field_70813_a - this.field_70811_b) * 0.5F;
+        this.field_70812_c = this.field_70811_b;
         boolean var1 = this.onGround;
         super.onUpdate();
         int var2;
@@ -110,14 +110,14 @@
                 this.playSound(this.getJumpSound(), this.getSoundVolume(), ((this.rand.nextFloat() - this.rand.nextFloat()) * 0.2F + 1.0F) / 0.8F);
             }
 
-            this.squishAmount = -0.5F;
+            this.field_70813_a = -0.5F;
         }
         else if (!this.onGround && var1)
         {
-            this.squishAmount = 1.0F;
+            this.field_70813_a = 1.0F;
         }
 
-        this.alterSquishAmount();
+        this.func_70808_l();
 
         if (this.worldObj.isRemote)
         {
@@ -166,9 +166,9 @@
         }
     }
 
-    protected void alterSquishAmount()
+    protected void func_70808_l()
     {
-        this.squishAmount *= 0.6F;
+        this.field_70813_a *= 0.6F;
     }
 
     /**
@@ -191,7 +191,7 @@
     {
         int var1 = this.getSlimeSize();
 
-        if (!this.worldObj.isRemote && var1 > 1 && this.getHealth() <= 0.0F)
+        if (!this.worldObj.isRemote && var1 > 1 && this.func_110143_aJ() <= 0.0F)
         {
             int var2 = 2 + this.rand.nextInt(3);
 
@@ -282,7 +282,7 @@
             {
                 BiomeGenBase var2 = this.worldObj.getBiomeGenForCoords(MathHelper.floor_double(this.posX), MathHelper.floor_double(this.posZ));
 
-                if (var2 == BiomeGenBase.swampland && this.posY > 50.0D && this.posY < 70.0D && this.rand.nextFloat() < 0.5F && this.rand.nextFloat() < this.worldObj.getCurrentMoonPhaseFactor() && this.worldObj.getBlockLightValue(MathHelper.floor_double(this.posX), MathHelper.floor_double(this.posY), MathHelper.floor_double(this.posZ)) <= this.rand.nextInt(8))
+                if (var2 == BiomeGenBase.swampland && this.posY > 50.0D && this.posY < 70.0D && this.rand.nextFloat() < 0.5F && this.rand.nextFloat() < this.worldObj.func_130001_d() && this.worldObj.getBlockLightValue(MathHelper.floor_double(this.posX), MathHelper.floor_double(this.posY), MathHelper.floor_double(this.posZ)) <= this.rand.nextInt(8))
                 {
                     return super.getCanSpawnHere();
                 }
