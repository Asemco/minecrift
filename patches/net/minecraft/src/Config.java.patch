--- a/net/minecraft/src/Config.java
+++ b/net/minecraft/src/Config.java
@@ -57,12 +57,14 @@
     public static final String OF_NAME = "OptiFine";
     public static final String MC_VERSION = "1.8.1";
     public static final String OF_EDITION = "HD_U";
-    public static final String OF_RELEASE = "B2";
-    public static final String VERSION = "OptiFine_1.8.1_HD_U_B2";
+    public static final String OF_RELEASE = "C7";
+    public static final String VERSION = "OptiFine_1.8.1_HD_U_C7";
     private static String newRelease = null;
     public static String openGlVersion = null;
     public static String openGlRenderer = null;
     public static String openGlVendor = null;
+    public static boolean fancyFogAvailable = false;
+    public static boolean occlusionAvailable = false;
     private static GameSettings gameSettings = null;
     private static Minecraft minecraft = null;
     private static boolean initialized = false;
@@ -92,7 +94,7 @@
 
     public static String getVersion()
     {
-        return "OptiFine_1.8.1_HD_U_B2";
+        return "OptiFine_1.8.1_HD_U_C7";
     }
 
     public static void initGameSettings(GameSettings settings)
@@ -146,12 +148,16 @@
             log("OpenGL Mipmap levels: Not available (GL12.GL_TEXTURE_MAX_LEVEL)");
         }
 
-        if (!GLContext.getCapabilities().GL_NV_fog_distance)
+        fancyFogAvailable = GLContext.getCapabilities().GL_NV_fog_distance;
+
+        if (!fancyFogAvailable)
         {
             log("OpenGL Fancy fog: Not available (GL_NV_fog_distance)");
         }
 
-        if (!GLContext.getCapabilities().GL_ARB_occlusion_query)
+        occlusionAvailable = GLContext.getCapabilities().GL_ARB_occlusion_query;
+
+        if (!occlusionAvailable)
         {
             log("OpenGL Occlussion culling: Not available (GL_ARB_occlusion_query)");
         }
@@ -162,12 +168,12 @@
 
     public static boolean isFancyFogAvailable()
     {
-        return GLContext.getCapabilities().GL_NV_fog_distance;
+        return fancyFogAvailable;
     }
 
     public static boolean isOcclusionAvailable()
     {
-        return GLContext.getCapabilities().GL_ARB_occlusion_query;
+        return occlusionAvailable;
     }
 
     public static String getOpenGlVersionString()
@@ -252,7 +258,7 @@
             switch (gameSettings.ofMipmapType)
             {
                 case 0:
-                    return 9984;
+                    return 9986;
 
                 case 1:
                     return 9986;
@@ -274,7 +280,7 @@
                     return 9986;
 
                 default:
-                    return 9984;
+                    return 9986;
             }
         }
     }
@@ -519,6 +525,11 @@
         return gameSettings.ofPotionParticles;
     }
 
+    public static boolean isFireworkParticles()
+    {
+        return gameSettings.ofFireworkParticles;
+    }
+
     public static float getAmbientOcclusionLevel()
     {
         return gameSettings.ofAoLevel;
@@ -809,6 +820,11 @@
         return gameSettings.ofClearWater;
     }
 
+    public static int getAnisotropicFilterLevel()
+    {
+        return gameSettings.ofAfLevel;
+    }
+
     public static int getAntialiasingLevel()
     {
         return antialiasingLevel;
@@ -821,7 +837,7 @@
 
     public static boolean isMultiTexture()
     {
-        return false;
+        return getAnisotropicFilterLevel() > 1 ? true : getAntialiasingLevel() > 0;
     }
 
     public static boolean isDrippingWaterLava()
