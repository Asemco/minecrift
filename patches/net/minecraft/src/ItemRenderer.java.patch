--- a/net/minecraft/src/ItemRenderer.java
+++ b/net/minecraft/src/ItemRenderer.java
@@ -5,9 +5,9 @@
 
 public class ItemRenderer
 {
-    private static final ResourceLocation RES_ITEM_GLINT = new ResourceLocation("textures/misc/enchanted_item_glint.png");
-    private static final ResourceLocation RES_MAP_BACKGROUND = new ResourceLocation("textures/map/map_background.png");
-    private static final ResourceLocation RES_UNDERWATER_OVERLAY = new ResourceLocation("textures/misc/underwater.png");
+    private static final ResourceLocation field_110930_b = new ResourceLocation("textures/misc/enchanted_item_glint.png");
+    private static final ResourceLocation field_110931_c = new ResourceLocation("textures/map/map_background.png");
+    private static final ResourceLocation field_110929_d = new ResourceLocation("textures/misc/underwater.png");
 
     /** A reference to the Minecraft object. */
     private Minecraft mc;
@@ -29,7 +29,7 @@
     public ItemRenderer(Minecraft par1Minecraft)
     {
         this.mc = par1Minecraft;
-        this.mapItemRenderer = new MapItemRenderer(par1Minecraft.gameSettings, par1Minecraft.getTextureManager());
+        this.mapItemRenderer = new MapItemRenderer(par1Minecraft.gameSettings, par1Minecraft.func_110434_K());
     }
 
     /**
@@ -38,11 +38,11 @@
     public void renderItem(EntityLivingBase par1EntityLivingBase, ItemStack par2ItemStack, int par3)
     {
         GL11.glPushMatrix();
-        TextureManager var4 = this.mc.getTextureManager();
+        TextureManager var4 = this.mc.func_110434_K();
 
         if (par2ItemStack.getItemSpriteNumber() == 0 && par2ItemStack.itemID < Block.blocksList.length && Block.blocksList[par2ItemStack.itemID] != null && RenderBlocks.renderItemIn3d(Block.blocksList[par2ItemStack.itemID].getRenderType()))
         {
-            var4.bindTexture(var4.getResourceLocation(0));
+            var4.func_110577_a(var4.func_130087_a(0));
             this.renderBlocksInstance.renderBlockAsItem(Block.blocksList[par2ItemStack.itemID], par2ItemStack.getItemDamage(), 1.0F);
         }
         else
@@ -55,7 +55,7 @@
                 return;
             }
 
-            var4.bindTexture(var4.getResourceLocation(par2ItemStack.getItemSpriteNumber()));
+            var4.func_110577_a(var4.func_130087_a(par2ItemStack.getItemSpriteNumber()));
             Tessellator var6 = Tessellator.instance;
             float var7 = var5.getMinU();
             float var8 = var5.getMaxU();
@@ -70,13 +70,13 @@
             GL11.glRotatef(50.0F, 0.0F, 1.0F, 0.0F);
             GL11.glRotatef(335.0F, 0.0F, 0.0F, 1.0F);
             GL11.glTranslatef(-0.9375F, -0.0625F, 0.0F);
-            renderItemIn2D(var6, var8, var9, var7, var10, var5.getIconWidth(), var5.getIconHeight(), 0.0625F);
+            renderItemIn2D(var6, var8, var9, var7, var10, var5.getOriginX(), var5.getOriginY(), 0.0625F);
 
             if (par2ItemStack.hasEffect() && par3 == 0)
             {
                 GL11.glDepthFunc(GL11.GL_EQUAL);
                 GL11.glDisable(GL11.GL_LIGHTING);
-                var4.bindTexture(RES_ITEM_GLINT);
+                var4.func_110577_a(field_110930_b);
                 GL11.glEnable(GL11.GL_BLEND);
                 GL11.glBlendFunc(GL11.GL_SRC_COLOR, GL11.GL_ONE);
                 float var14 = 0.76F;
@@ -269,7 +269,7 @@
             GL11.glRotatef(90.0F, 0.0F, 1.0F, 0.0F);
             GL11.glRotatef(var20 * -85.0F, 0.0F, 0.0F, 1.0F);
             GL11.glEnable(GL12.GL_RESCALE_NORMAL);
-            this.mc.getTextureManager().bindTexture(var3.getLocationSkin());
+            this.mc.func_110434_K().func_110577_a(var3.func_110306_p());
 
             for (var12 = 0; var12 < 2; ++var12)
             {
@@ -301,7 +301,7 @@
             GL11.glTranslatef(-1.0F, -1.0F, 0.0F);
             var16 = 0.015625F;
             GL11.glScalef(var16, var16, var16);
-            this.mc.getTextureManager().bindTexture(RES_MAP_BACKGROUND);
+            this.mc.func_110434_K().func_110577_a(field_110931_c);
             Tessellator var30 = Tessellator.instance;
             GL11.glNormal3f(0.0F, 0.0F, -1.0F);
             var30.startDrawingQuads();
@@ -315,7 +315,7 @@
 
             if (var19 != null)
             {
-                this.mapItemRenderer.renderMap(this.mc.thePlayer, this.mc.getTextureManager(), var19);
+                this.mapItemRenderer.renderMap(this.mc.thePlayer, this.mc.func_110434_K(), var19);
             }
 
             GL11.glPopMatrix();
@@ -448,7 +448,7 @@
             var13 = MathHelper.sin(MathHelper.sqrt_float(var20) * (float)Math.PI);
             GL11.glRotatef(var13 * 70.0F, 0.0F, 1.0F, 0.0F);
             GL11.glRotatef(-var22 * 20.0F, 0.0F, 0.0F, 1.0F);
-            this.mc.getTextureManager().bindTexture(var3.getLocationSkin());
+            this.mc.func_110434_K().func_110577_a(var3.func_110306_p());
             GL11.glTranslatef(-1.0F, 3.6F, 3.5F);
             GL11.glRotatef(120.0F, 0.0F, 0.0F, 1.0F);
             GL11.glRotatef(200.0F, 1.0F, 0.0F, 0.0F);
@@ -527,7 +527,7 @@
      */
     private void renderInsideOfBlock(float par1, Icon par2Icon)
     {
-        this.mc.getTextureManager().bindTexture(TextureMap.locationBlocksTexture);
+        this.mc.func_110434_K().func_110577_a(TextureMap.field_110575_b);
         Tessellator var3 = Tessellator.instance;
         float var4 = 0.1F;
         GL11.glColor4f(var4, var4, var4, 0.5F);
@@ -557,7 +557,7 @@
      */
     private void renderWarpedTextureOverlay(float par1)
     {
-        this.mc.getTextureManager().bindTexture(RES_UNDERWATER_OVERLAY);
+        this.mc.func_110434_K().func_110577_a(field_110929_d);
         Tessellator var2 = Tessellator.instance;
         float var3 = this.mc.thePlayer.getBrightness(par1);
         GL11.glColor4f(var3, var3, var3, 0.5F);
@@ -597,8 +597,8 @@
         for (int var4 = 0; var4 < 2; ++var4)
         {
             GL11.glPushMatrix();
-            Icon var5 = Block.fire.getFireIcon(1);
-            this.mc.getTextureManager().bindTexture(TextureMap.locationBlocksTexture);
+            Icon var5 = Block.fire.func_94438_c(1);
+            this.mc.func_110434_K().func_110577_a(TextureMap.field_110575_b);
             float var6 = var5.getMinU();
             float var7 = var5.getMaxU();
             float var8 = var5.getMinV();
