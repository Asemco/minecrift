--- a/net/minecraft/src/MapGenStructure.java
+++ b/net/minecraft/src/MapGenStructure.java
@@ -8,8 +8,6 @@
 
 public abstract class MapGenStructure extends MapGenBase
 {
-    private MapGenStructureData field_143029_e;
-
     /**
      * Used to store a list of all structures that have been recursively generated. Used so that during recursive
      * generation, the structure generator can avoid generating structures that intersect ones that have already been
@@ -17,15 +15,11 @@
      */
     protected Map structureMap = new HashMap();
 
-    public abstract String func_143025_a();
-
     /**
      * Recursively called by generate() (generate) and optionally by itself.
      */
-    protected final void recursiveGenerate(World par1World, int par2, int par3, int par4, int par5, byte[] par6ArrayOfByte)
+    protected void recursiveGenerate(World par1World, int par2, int par3, int par4, int par5, byte[] par6ArrayOfByte)
     {
-        this.func_143027_a(par1World);
-
         if (!this.structureMap.containsKey(Long.valueOf(ChunkCoordIntPair.chunkXZ2Int(par2, par3))))
         {
             this.rand.nextInt();
@@ -36,7 +30,6 @@
                 {
                     StructureStart var7 = this.getStructureStart(par2, par3);
                     this.structureMap.put(Long.valueOf(ChunkCoordIntPair.chunkXZ2Int(par2, par3)), var7);
-                    this.func_143026_a(par2, par3, var7);
                 }
             }
             catch (Throwable var10)
@@ -57,7 +50,6 @@
      */
     public boolean generateStructuresInChunk(World par1World, Random par2Random, int par3, int par4)
     {
-        this.func_143027_a(par1World);
         int var5 = (par3 << 4) + 8;
         int var6 = (par4 << 4) + 8;
         boolean var7 = false;
@@ -71,7 +63,6 @@
             {
                 var9.generateStructure(par1World, par2Random, new StructureBoundingBox(var5, var6, var5 + 15, var6 + 15));
                 var7 = true;
-                this.func_143026_a(var9.func_143019_e(), var9.func_143018_f(), var9);
             }
         }
 
@@ -83,12 +74,6 @@
      */
     public boolean hasStructureAt(int par1, int par2, int par3)
     {
-        this.func_143027_a(this.worldObj);
-        return this.func_143028_c(par1, par2, par3) != null;
-    }
-
-    protected StructureStart func_143028_c(int par1, int par2, int par3)
-    {
         Iterator var4 = this.structureMap.values().iterator();
 
         while (var4.hasNext())
@@ -105,18 +90,17 @@
 
                     if (var7.getBoundingBox().isVecInside(par1, par2, par3))
                     {
-                        return var5;
+                        return true;
                     }
                 }
             }
         }
 
-        return null;
+        return false;
     }
 
     public boolean func_142038_b(int par1, int par2, int par3)
     {
-        this.func_143027_a(this.worldObj);
         Iterator var4 = this.structureMap.values().iterator();
         StructureStart var5;
 
@@ -137,7 +121,6 @@
     public ChunkPosition getNearestInstance(World par1World, int par2, int par3, int par4)
     {
         this.worldObj = par1World;
-        this.func_143027_a(par1World);
         this.rand.setSeed(par1World.getSeed());
         long var5 = this.rand.nextLong();
         long var7 = this.rand.nextLong();
@@ -221,49 +204,6 @@
         return null;
     }
 
-    private void func_143027_a(World par1World)
-    {
-        if (this.field_143029_e == null)
-        {
-            this.field_143029_e = (MapGenStructureData)par1World.loadItemData(MapGenStructureData.class, this.func_143025_a());
-
-            if (this.field_143029_e == null)
-            {
-                this.field_143029_e = new MapGenStructureData(this.func_143025_a());
-                par1World.setItemData(this.func_143025_a(), this.field_143029_e);
-            }
-            else
-            {
-                NBTTagCompound var2 = this.field_143029_e.func_143041_a();
-                Iterator var3 = var2.getTags().iterator();
-
-                while (var3.hasNext())
-                {
-                    NBTBase var4 = (NBTBase)var3.next();
-
-                    if (var4.getId() == 10)
-                    {
-                        NBTTagCompound var5 = (NBTTagCompound)var4;
-
-                        if (var5.hasKey("ChunkX") && var5.hasKey("ChunkZ"))
-                        {
-                            int var6 = var5.getInteger("ChunkX");
-                            int var7 = var5.getInteger("ChunkZ");
-                            StructureStart var8 = MapGenStructureIO.func_143035_a(var5, par1World);
-                            this.structureMap.put(Long.valueOf(ChunkCoordIntPair.chunkXZ2Int(var6, var7)), var8);
-                        }
-                    }
-                }
-            }
-        }
-    }
-
-    private void func_143026_a(int par1, int par2, StructureStart par3StructureStart)
-    {
-        this.field_143029_e.func_143043_a(par3StructureStart.func_143021_a(par1, par2), par1, par2);
-        this.field_143029_e.markDirty();
-    }
-
     protected abstract boolean canSpawnStructureAtCoords(int var1, int var2);
 
     protected abstract StructureStart getStructureStart(int var1, int var2);
