--- a/net/minecraft/util/HttpUtil.java
+++ b/net/minecraft/util/HttpUtil.java
@@ -144,105 +144,109 @@
 
                 try
                 {
-                    byte[] var4 = new byte[4096];
-                    URL var5 = new URL(p_151223_1_);
-                    var1 = var5.openConnection(p_151223_6_);
-                    float var6 = 0.0F;
-                    float var7 = (float)p_151223_3_.entrySet().size();
-                    Iterator var8 = p_151223_3_.entrySet().iterator();
-
-                    while (var8.hasNext())
-                    {
-                        Entry var9 = (Entry)var8.next();
-                        var1.setRequestProperty((String)var9.getKey(), (String)var9.getValue());
-
-                        if (p_151223_5_ != null)
-                        {
-                            p_151223_5_.setLoadingProgress((int)(++var6 / var7 * 100.0F));
-                        }
-                    }
-
-                    var2 = var1.getInputStream();
-                    var7 = (float)var1.getContentLength();
-                    int var28 = var1.getContentLength();
-
-                    if (p_151223_5_ != null)
-                    {
-                        p_151223_5_.resetProgresAndWorkingMessage(String.format("Downloading file (%.2f MB)...", new Object[] {Float.valueOf(var7 / 1000.0F / 1000.0F)}));
-                    }
-
-                    if (p_151223_0_.exists())
+                    try
                     {
-                        long var29 = p_151223_0_.length();
+                        byte[] var4 = new byte[4096];
+                        URL var5 = new URL(p_151223_1_);
+                        var1 = var5.openConnection(p_151223_6_);
+                        float var6 = 0.0F;
+                        float var7 = (float)p_151223_3_.entrySet().size();
+                        Iterator var8 = p_151223_3_.entrySet().iterator();
 
-                        if (var29 == (long)var28)
+                        while (var8.hasNext())
                         {
-                            p_151223_2_.func_148522_a(p_151223_0_);
+                            Entry var9 = (Entry)var8.next();
+                            var1.setRequestProperty((String)var9.getKey(), (String)var9.getValue());
 
                             if (p_151223_5_ != null)
                             {
-                                p_151223_5_.func_146586_a();
+                                p_151223_5_.setLoadingProgress((int)(++var6 / var7 * 100.0F));
                             }
-
-                            return;
                         }
 
-                        HttpUtil.logger.warn("Deleting " + p_151223_0_ + " as it does not match what we currently have (" + var28 + " vs our " + var29 + ").");
-                        p_151223_0_.delete();
-                    }
-                    else if (p_151223_0_.getParentFile() != null)
-                    {
-                        p_151223_0_.getParentFile().mkdirs();
-                    }
-
-                    var3 = new DataOutputStream(new FileOutputStream(p_151223_0_));
+                        var2 = var1.getInputStream();
+                        var7 = (float)var1.getContentLength();
+                        int var28 = var1.getContentLength();
 
-                    if (p_151223_4_ > 0 && var7 > (float)p_151223_4_)
-                    {
                         if (p_151223_5_ != null)
                         {
-                            p_151223_5_.func_146586_a();
+                            p_151223_5_.resetProgresAndWorkingMessage(String.format("Downloading file (%.2f MB)...", new Object[] {Float.valueOf(var7 / 1000.0F / 1000.0F)}));
                         }
 
-                        throw new IOException("Filesize is bigger than maximum allowed (file is " + var6 + ", limit is " + p_151223_4_ + ")");
-                    }
+                        if (p_151223_0_.exists())
+                        {
+                            long var29 = p_151223_0_.length();
 
-                    boolean var30 = false;
-                    int var31;
+                            if (var29 == (long)var28)
+                            {
+                                p_151223_2_.func_148522_a(p_151223_0_);
 
-                    while ((var31 = var2.read(var4)) >= 0)
-                    {
-                        var6 += (float)var31;
+                                if (p_151223_5_ != null)
+                                {
+                                    p_151223_5_.func_146586_a();
+                                }
 
-                        if (p_151223_5_ != null)
+                                return;
+                            }
+
+                            HttpUtil.logger.warn("Deleting " + p_151223_0_ + " as it does not match what we currently have (" + var28 + " vs our " + var29 + ").");
+                            p_151223_0_.delete();
+                        }
+                        else if (p_151223_0_.getParentFile() != null)
                         {
-                            p_151223_5_.setLoadingProgress((int)(var6 / var7 * 100.0F));
+                            p_151223_0_.getParentFile().mkdirs();
                         }
 
-                        if (p_151223_4_ > 0 && var6 > (float)p_151223_4_)
+                        var3 = new DataOutputStream(new FileOutputStream(p_151223_0_));
+
+                        if (p_151223_4_ > 0 && var7 > (float)p_151223_4_)
                         {
                             if (p_151223_5_ != null)
                             {
                                 p_151223_5_.func_146586_a();
                             }
 
-                            throw new IOException("Filesize was bigger than maximum allowed (got >= " + var6 + ", limit was " + p_151223_4_ + ")");
+                            throw new IOException("Filesize is bigger than maximum allowed (file is " + var6 + ", limit is " + p_151223_4_ + ")");
                         }
 
-                        var3.write(var4, 0, var31);
-                    }
+                        boolean var30 = false;
+                        int var31;
+
+                        while ((var31 = var2.read(var4)) >= 0)
+                        {
+                            var6 += (float)var31;
+
+                            if (p_151223_5_ != null)
+                            {
+                                p_151223_5_.setLoadingProgress((int)(var6 / var7 * 100.0F));
+                            }
+
+                            if (p_151223_4_ > 0 && var6 > (float)p_151223_4_)
+                            {
+                                if (p_151223_5_ != null)
+                                {
+                                    p_151223_5_.func_146586_a();
+                                }
+
+                                throw new IOException("Filesize was bigger than maximum allowed (got >= " + var6 + ", limit was " + p_151223_4_ + ")");
+                            }
 
-                    p_151223_2_.func_148522_a(p_151223_0_);
+                            var3.write(var4, 0, var31);
+                        }
 
-                    if (p_151223_5_ != null)
+                        p_151223_2_.func_148522_a(p_151223_0_);
+
+                        if (p_151223_5_ != null)
+                        {
+                            p_151223_5_.func_146586_a();
+                            return;
+                        }
+                    }
+                    catch (Throwable var26)
                     {
-                        p_151223_5_.func_146586_a();
+                        var26.printStackTrace();
                     }
                 }
-                catch (Throwable var26)
-                {
-                    var26.printStackTrace();
-                }
                 finally
                 {
                     try
